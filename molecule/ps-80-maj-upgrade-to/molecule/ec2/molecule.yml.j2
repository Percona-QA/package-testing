---
scenario:
  name: ec2
  destroy_sequence:
    - destroy
  cleanup_sequence:
    - cleanup
  test_sequence:
    - lint
    - destroy
    - dependency
    - create
    - prepare
    - converge
    - verify
    - cleanup
    - destroy
dependency:
  name: galaxy
driver:
  name: ec2
lint:
  name: yamllint
platforms:
{%- set role = "ps-80-maj-upgrade-to" %}
{%- set platforms = env("PLATFORMS").split() %}
{%- for platform, vm in vms.items() if platform in roles[role] and platform in platforms %}
  - name: {{role}}-{{platform}}
    region: {{vm.aws_default_region}}
    image: {{vm.image}}
    vpc_subnet_id: {{vm.subnet}}
    instance_type: {{vm.instance_type}}
    root_device_name: {{vm.root_device_name}}
    ssh_user: {{vm.user}}
    instance_tags:
      iit-billing-tag: jenkins-ps-pkg-worker
{%- endfor %}
provisioner:
  name: ansible
  env:
    MOLECULE_KEY_NAME: molecule-{{role}}
  playbooks:
    create: ../../../playbooks/create.yml
    cleanup: ../../../ps-80-install/molecule/default/cleanup.yml
    destroy: ../../../playbooks/destroy.yml
    prepare: ../../../playbooks/prepare.yml
  lint:
    name: ansible-lint
    enabled: False
verifier:
  name: testinfra
  directory: ../../../ps-80-install/molecule/default/tests
  options:
    verbose: true
    s: true
    junitxml: report.xml
  lint:
    name: flake8
