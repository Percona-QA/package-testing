---
- name: remove the Percona apt main repository
  apt_repository: repo='deb http://repo.percona.com/apt {{ ansible_lsb.codename }} main' state=absent update_cache=yes
  when: ansible_os_family == "Debian"

- name: remove the Percona apt testing repositories
  apt_repository: repo='deb http://repo.percona.com/apt {{ ansible_lsb.codename }} testing' state=absent update_cache=yes
  when: ansible_os_family == "Debian"

- name: remove the Percona yum repositories
  yum: name=percona-release state=absent
  when: ansible_os_family == "RedHat"

- name: remove saved repo files in yum
  file: path={{ item }} state=absent
  with_items:
    - /etc/yum.repos.d/percona-release.repo
    - /etc/yum.repos.d/percona-release.repo.rpmsave
  when: ansible_os_family == "RedHat"

- name: Install percona release package
  include_tasks: ../../../tasks/install_percona_release.yml

- name: Setup pdmdb repo
  command: percona-release setup {{ version }}
  vars:
    version: "{{ lookup('env', 'VERSION') }}"

- name: install psmdb deb packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: latest
  vars:
    packages:
    - percona-server-mongodb
    - percona-server-mongodb-server
    - percona-server-mongodb-mongos
    - percona-server-mongodb-shell
    - percona-server-mongodb-tools
    - percona-server-mongodb-dbg
  when: ansible_os_family == "Debian"

- name: install psmdb rpm packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - percona-server-mongodb
    - percona-server-mongodb-server
    - percona-server-mongodb-mongos
    - percona-server-mongodb-shell
    - percona-server-mongodb-tools
    - percona-server-mongodb-debuginfo
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version <= "7"

- name: install psmdb rpm packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - percona-server-mongodb
      - percona-server-mongodb-server
      - percona-server-mongodb-mongos
      - percona-server-mongodb-shell
      - percona-server-mongodb-tools
      - percona-server-mongodb-debugsource
      - percona-server-mongodb-shell-debuginfo
      - percona-server-mongodb-tools-debuginfo
      - percona-server-mongodb-mongos-debuginfo
      - percona-server-mongodb-server-debuginfo
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: stop mongod service
  service: name=mongod state=stopped

- name: add replica set name into mongod config
  replace:
    path: /etc/mongod.conf
    regexp: '^#replication:'
    replace: 'replication:\n  replSetName: "rs1"'

- name: start mongod service
  service: name=mongod state=started

- name: initiate mongod replica set
  command: mongo --eval 'rs.initiate()'

- name: install PBM new deb packages
  apt:
    name: percona-backup-mongodb
    update_cache: yes
    state: latest
  when: ansible_os_family == "Debian"

- name: install PBM new rpm packages
  yum:
    name: percona-backup-mongodb
    state: latest
  when: ansible_os_family == "RedHat"

- name: add storage for pbm-agent
  blockinfile:
    path: /etc/pbm-agent-storage.conf
    mode: '0666'
    create: true
    block: |
      storage:
        type: s3
        s3:
           region: us-east-1
           bucket: operator-testing
           credentials:
             access-key-id: {{ access_key }}
             secret-access-key: {{ access_secret }}
  vars:
    access_key: "{{ lookup('env', 'S3_ACCESS_KEY_ID') }}"
    access_secret: "{{ lookup('env', 'S3_SECRET_ACCESS_KEY') }}"

- name: add GCP storage for pbm-agent
  blockinfile:
    path: /etc/pbm-agent-storage-gcp.conf
    mode: '0666'
    create: true
    block: |
      storage:
        type: s3
        s3:
           region: us-east-1
           endpointUrl: https://storage.googleapis.com
           bucket: operator-testing
           credentials:
             access-key-id: {{ access_key }}
             secret-access-key: {{ access_secret }}
  vars:
    access_key: "{{ lookup('env', 'GCP_ACCESS_KEY') }}"
    access_secret: "{{ lookup('env', 'GCP_SECRET_KEY') }}"

- name: add local storage for pbm-agent
  blockinfile:
    path: /etc/pbm-agent-storage-local.conf
    mode: '0666'
    create: true
    block: |
      storage:
          type: filesystem
          filesystem:
              path: /tmp

- name: edit pbm-agent service config for deb
  blockinfile:
    path: /etc/default/pbm-agent
    block: |
      PBM_MONGODB_URI="mongodb://localhost:27017/"
  when: ansible_os_family == "Debian"

- name: edit pbm-agent service config for rhel based
  blockinfile:
    path: /etc/sysconfig/pbm-agent
    block: |
      PBM_MONGODB_URI="mongodb://localhost:27017/"
  when: ansible_os_family == "RedHat"

- name: start pbm-agent service
  service:
    name: pbm-agent
    state: started
    enabled: yes
