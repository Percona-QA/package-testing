---
# tasks file for pdpxc

- name: include playbook for removing Percona repo
  include: ../../../tasks/remove_percona_repository.yml

- name: Install percona release
  include: ../../tasks/install_percona_release.yml

- name: enable the PDMYSQL-80 repo
  command: percona-release enable-only pdpxc-{{ version }} {{ repo }}
  vars:
    repo: "{{ lookup('env', 'REPO') }}"
    version: "{{ lookup('env', 'VERSION') }}"

- name: clean and update yum cache
  shell: |
    yum clean all
    yum makecache
  when: ansible_os_family == "RedHat"

- name: disable the mysql module on RHEL/CentOS 8
  command: yum module disable mysql -y
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "8"

- name: disable the mariadb module on RHEL/CentOS 8
  command: yum module disable mariadb -y
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "8"

- name: install PXC 8 deb packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - percona-xtradb-cluster-full
    - percona-xtradb-cluster-client
    - percona-xtradb-cluster-common
    - percona-xtradb-cluster-dbg
    - percona-xtradb-cluster-garbd-debug
    - percona-xtradb-cluster-garbd
    - percona-xtradb-cluster-server
    - percona-xtradb-cluster-server-debug
    - percona-xtradb-cluster-test
    - percona-xtradb-cluster
  when: ansible_os_family == "Debian"

- name: install HA Proxy 8 deb packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - percona-haproxy
    - percona-haproxy-doc
    - percona-vim-haproxy
  when: ansible_os_family == "Debian"

- name: start mysql service
  service: name=mysql state=started
  when: ansible_os_family == "Debian"

- name: Copy haproxy.cfg
  copy:
    src: haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: 0644

- name: Start haproxy
  shell: haproxy -f  /etc/haproxy/haproxy.cfg -D