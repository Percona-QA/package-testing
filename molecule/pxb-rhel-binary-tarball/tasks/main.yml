---

  - name: SET PXB_VERSION VAR
    set_fact:
      PXB_VERSION: "{{ lookup('env', 'PXB_VERSION') }}"

  - name: Set Tarball and Folder name for REGULAR
    set_fact:
      TARBALL_NAME_REGULAR: "percona-xtrabackup-{{ lookup('env', 'PXB_VERSION') }}-Linux-x86_64.glibc2.28.tar.gz"
      TARBALL_NAME_REGULAR_FOLDER: "percona-xtrabackup-{{ lookup('env', 'PXB_VERSION') }}-Linux-x86_64.glibc2.28"

  - name: Set Tarball and Folder name for MINIMAL
    set_fact:
      TARBALL_NAME_MINIMAL: "percona-xtrabackup-{{ lookup('env', 'PXB_VERSION') }}-Linux-x86_64.glibc2.28-minimal.tar.gz"
      TARBALL_NAME_MINIMAL_FOLDER: "percona-xtrabackup-{{ lookup('env', 'PXB_VERSION') }}-Linux-x86_64.glibc2.28-minimal"

  - name: Extract major version
    set_fact:
      major_version: "{{ PXB_VERSION.split('-')[0] }}"

  - name: Extract minor version
    set_fact:
      minor_version: "{{ PXB_VERSION.split('-')[1] }}"

  - name: Print major and minor versions
    debug:
      msg: "Major version: {{ major_version }}, Minor version: {{ minor_version }}"

  - name: include tasks for test env setup
    include_tasks: ../../../tasks/test_prep.yml

  - name: install libev rpm package
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - libev
    when: ansible_os_family == "RedHat"

  - name: include playbook for removing Percona repo
    include_tasks: ../../../tasks/remove_percona_repository.yml

  - name: disable the mysql module on RHEL/CentOS 8
    command: /usr/bin/dnf module disable mysql -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: add the main Percona yum repos for centos
    yum: name=https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    when: ansible_os_family == "RedHat"

  - name: Enable PDPS-{{ major_version }}
    command: percona-release enable pdps-{{ major_version }} release

  - name: clean and update yum cache
    shell: |
      yum clean all
      yum makecache
    when: ansible_os_family == "RedHat"

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

  - name: install Percona Server 8.0 packages
    include_tasks: ../../../tasks/install_ps80.yml

  - name: Download {{ TARBALL_NAME_REGULAR }} REGULAR
    ansible.builtin.get_url:
      url: https://downloads.percona.com/downloads/TESTING/issue-PKG56/{{ TARBALL_NAME_REGULAR }}
      dest: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_REGULAR }}
      mode: '0644'

  - name: Extract {{ TARBALL_NAME_REGULAR }} REGULAR
    ansible.builtin.unarchive:
      src: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_REGULAR }}
      dest: /package-testing/molecule/pxb-rhel-binary-tarball/
      remote_src: yes

  - name: start mysql service with systemctl command
    command: systemctl start mysql

  - name: set root password on centos
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: install plugins, import world database
    command: /package-testing/plugins_test.sh

  - name: run backup for Redhat/Centos
    command: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_REGULAR_FOLDER }}/bin/xtrabackup --backup --user=root --target-dir=/tmp/backups/ --socket=/var/lib/mysql/mysql.sock

  - name: prepare backup
    command: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_REGULAR_FOLDER }}/bin/xtrabackup --prepare --target-dir=/tmp/backups/

  - name: run backup for Redhat/Centos with streaming and encryption enabled
    shell: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_REGULAR_FOLDER }}/bin/xtrabackup --backup --user=root --target-dir=backups/ --socket=/var/lib/mysql/mysql.sock --encrypt=AES256 --encrypt-key=mAU3Xs5sRcSB7zBEJP1BInPP5lgShKly --stream=xbstream --parallel=10 > backup.stream

  - name: extract and decrypt backup
    shell: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_REGULAR_FOLDER }}/bin/xbstream --directory=backups/ --extract --decrypt=AES256 --encrypt-key=mAU3Xs5sRcSB7zBEJP1BInPP5lgShKly < backup.stream

  - name: prepare backup
    command: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_REGULAR_FOLDER }}/bin/xtrabackup --prepare --target-dir=backups/

  - name: remove backup files
    command: rm -r /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_REGULAR_FOLDER }} backups /tmp/backups

  - name: Download {{ TARBALL_NAME_MINIMAL }} MINIMAL
    ansible.builtin.get_url:
      url: https://downloads.percona.com/downloads/TESTING/issue-PKG56/{{ TARBALL_NAME_MINIMAL }}
      dest: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_MINIMAL }}
      mode: '0644'

  - name: Extract {{ TARBALL_NAME_MINIMAL }} MINIMAL
    ansible.builtin.unarchive:
      src: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_MINIMAL }}
      dest: /package-testing/molecule/pxb-rhel-binary-tarball/
      remote_src: yes

  - name: run backup for Redhat/Centos
    command: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_MINIMAL_FOLDER }}/bin/xtrabackup --backup --user=root --target-dir=/tmp/backups/ --socket=/var/lib/mysql/mysql.sock

  - name: prepare backup
    command: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_MINIMAL_FOLDER }}/bin/xtrabackup --prepare --target-dir=/tmp/backups/

  - name: run backup for Redhat/Centos with streaming and encryption enabled
    shell: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_MINIMAL_FOLDER }}/bin/xtrabackup --backup --user=root --target-dir=backups/ --socket=/var/lib/mysql/mysql.sock --encrypt=AES256 --encrypt-key=mAU3Xs5sRcSB7zBEJP1BInPP5lgShKly --stream=xbstream --parallel=10 > backup.stream

  - name: extract and decrypt backup
    shell: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_MINIMAL_FOLDER }}/bin/xbstream --directory=backups/ --extract --decrypt=AES256 --encrypt-key=mAU3Xs5sRcSB7zBEJP1BInPP5lgShKly < backup.stream

  - name: prepare backup
    command: /package-testing/molecule/pxb-rhel-binary-tarball/{{ TARBALL_NAME_MINIMAL_FOLDER }}/bin/xtrabackup --prepare --target-dir=backups/
