---
# tasks file for ps-innodb-cluster-router
  - name: include tasks for test env setup
    include_tasks: ../../../../tasks/test_prep.yml

  - name: include tasks for enabling PS 8 main repo
    include: ../../../../tasks/enable_ps8_main_repo.yml
    when: lookup('env', 'INSTALL_REPO') == "main"

  - name: include tasks for enabling PS 8 test repo
    include: ../../../../tasks/enable_ps8_testing_repo.yml
    when: lookup('env', 'INSTALL_REPO') == "testing" or lookup('env', 'INSTALL_REPO') == ""

  - name: include tasks for enabling PS 8 experimental repo
    include: ../../../../tasks/enable_ps8_experimental_repo.yml
    when: lookup('env', 'INSTALL_REPO') == "experimental"

  - name: enable tools main repo
    command: percona-release enable tools release
    when: lookup('env', 'INSTALL_REPO') == "main"

  - name: include tasks for enabling tools test repo
    command: percona-release enable tools testing
    when: lookup('env', 'INSTALL_REPO') == "testing" or lookup('env', 'INSTALL_REPO') == ""

  - name: enable tools experimental repo
    command: percona-release enable tools experimental
    when: lookup('env', 'INSTALL_REPO') == "experimental"

  - name: setup hosts file
    copy:
      content: |
        127.0.0.1 {{ ansible_hostname }} localhost
        {{ lookup('env','PS_NODE1_IP') }} ps-node1
        {{ lookup('env','PS_NODE2_IP') }} ps-node2
        {{ lookup('env','PS_NODE3_IP') }} ps-node3
        {{ lookup('env','MYSQL_ROUTER_IP') }} mysql-router
        {% for var in ['PS_NODE1_IP', 'PS_NODE2_IP', 'PS_NODE3_IP', 'MYSQL_ROUTER_IP'] %}
        {{ lookup('env', var) }} ip-{{ lookup('env', var) | replace('.', '-') }}
        {{ lookup('env', var) }} ip-{{ lookup('env', var) | replace('.', '-') }}.us-west-2.compute.internal
        {% endfor %}
        ::1     localhost ip6-localhost ip6-loopback
        ff02::1 ip6-allnodes
        ff02::2 ip6-allrouters
      dest: /etc/hosts
      force: yes
      group: root
      owner: root
      mode: 0644

  - name: install router and shell deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - percona-mysql-router
      - percona-mysql-shell
      - sysbench
      - jq
    when: ansible_os_family == "Debian"

  - name: install router and shell rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - percona-mysql-router
      - percona-mysql-shell
      - sysbench
      - jq
    when: ansible_os_family == "RedHat"

  - name: create cluster
    shell: mysqlsh --uri=root@ps-node1 --password=Test1234# -- dba create-cluster testCluster

  - pause:
      seconds: 10

  - name: add slave1
    shell: mysqlsh --uri=root@ps-node1 --password=Test1234# -- cluster add-instance root@ps-node2:3306 --options-password=Test1234# --recoveryMethod=clone

  - name: add slave2
    shell: mysqlsh --uri=root@ps-node1 --password=Test1234# -- cluster add-instance root@ps-node3:3306 --options-password=Test1234# --recoveryMethod=clone

  - name: bootstrap router
    shell: echo "Test1234#" | sudo mysqlrouter --bootstrap root@ps-node1 --user=mysqlrouter

  - name: restart mysqlrouter service
    service:
      name: mysqlrouter
      state: restarted

  - name: create sbtest database
    shell: mysqlsh root@localhost:6446 --password=Test1234# --sql -e 'create database sbtest;'

  - name: run sysbench
    shell: sysbench --report-interval=1 --tables=2 --table-size=10000 --time=0 --events=0 --threads=1 --rand-type=pareto --db-driver=mysql --mysql-user=sysbench --mysql-password=Test1234# --mysql-host=mysql-router --mysql-port=6446 --mysql-db=sbtest --mysql-storage-engine=innodb /usr/share/sysbench/oltp_read_write.lua prepare

