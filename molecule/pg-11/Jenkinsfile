pipeline {
  agent { label 'qaserver-03' }
  parameters {
        choice(
            name: 'PLATFORM',
            description: 'For what platform (OS) need to test',
            choices: [
                'centos7',
                'debian9',
                'debian10',
                'rhel8',
                'ubuntu-bionic'
            ]
        )
  }
  stages {
    stage('Set build name'){
      steps {
                script {
                    currentBuild.displayName = "${env.BUILD_NUMBER}-${env.PLATFORM}"
                }
            }
        }
    stage ('Get latest code') {
      steps {
        checkout scm
      }
    }
    stage ('Setup Environment Variables') {
      steps {
       script {
        if (params.PLATFORM=='centos7'){
         env.PLATFORM_BOX='bento/centos-7'
        }
        else if (params.PLATFORM=='debian9'){
          env.PLATFORM_BOX='bento/debian-9'
        }
        else if (params.PLATFORM=='debian10'){
          env.PLATFORM_BOX='bento/debian-10'
         }
        else if (params.PLATFORM=='ubuntu-bionic'){
          env.PLATFORM_BOX='bento/ubuntu-18.04'
         }
        else if (params.PLATFORM=='rhel8'){
          env.PLATFORM_BOX='generic/rhel8'
         }
        }
       }
      }
    stage ('Setup Python virtual environment') {
      steps {
        sh '''
        python3 -m venv virtenv
        source virtenv/bin/activate
        pip install pytest molecule ansible wheel  python-vagrant paramiko
        '''
      }
    }
    stage ('Destroy previous environment') {
      steps {
         echo "${env.PLATFORM}"
         echo "${env.PLATFORM_BOX}"
         sh '''
           echo $PLATFORM
           echo $PLATFORM_BOX
           source virtenv/bin/activate
           cd molecule/pg-11
           molecule destroy
         '''
        }
    }
    stage ('Create virtual machines and run playbook for test') {
      steps {
          echo "${env.PLATFORM}"
          echo "${env.PLATFORM_BOX}"
          sh '''
              echo $PLATFORM
              echo $PLATFORM_BOX
              source virtenv/bin/activate
              cd molecule/pg-11
              molecule converge
           '''
     }
    }
    stage ('Start testinfra tests') {
      steps {
         sh '''
           source virtenv/bin/activate
           cd molecule/pg-11
           molecule verify
         '''
        }
    }
    stage ('Start packages deletion') {
      steps {
         sh '''
           source virtenv/bin/activate
           cd molecule/pg-11
           molecule cleanup
         '''
        }
    }
    stage ('Destroy environment') {
      steps {
         sh '''
           source virtenv/bin/activate
           cd molecule/pg-11
           molecule destroy
         '''
        }
    }
  }
   post {
        always {
            junit 'molecule/pg-11/molecule/default/*.xml'
            cleanWs()
        }
    }
}