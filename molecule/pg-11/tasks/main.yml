---
# This playbook does following:
#   enables Percona repository
#   installs Percona Platform for PostgreSQL packages
#   does some tests
- name: include tasks for test env setup
  include_tasks: ../../../tasks/test_prep.yml

    #  - name: include tasks for enabling main repo
    #include: ../tasks/enable_main_repo.yml
    #when: lookup('env', 'install_repo') == "main"

  ### temp part until percona-release is updated for PPG project
- name: include tasks for enabling main repo (do this just for GPG key)
  include: ../../../tasks/enable_main_repo.yml

- name: download newer percona-release script
  get_url:
    url: https://raw.githubusercontent.com/percona/percona-repositories/master/scripts/percona-release.sh
    dest: /usr/bin/percona-release
    mode: '755'
    force: true

- name: setup temporary experimental repo until percona-release is updated
  command: percona-release enable ppg-11 experimental

- name: install Percona Platform for PostgreSQL 11 packages
  include_tasks: ../../../tasks/install_ppg11.yml

- name: Install pgaudit Debian
  apt:
    name: percona-postgresql-11-pgaudit
  when: ansible_os_family == "Debian"

- name: Enable pgaudit for Debian
  lineinfile:
    path: /etc/postgresql/11/main/postgresql.conf
    line: shared_preload_libraries = 'pgaudit'
  when: ansible_os_family == "Debian"

- name: Install pgaudit RHEL
  yum:
    name: percona-pgaudit
  when: ansible_os_family == "RedHat"

- name: Install pgbackrest Debian
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - percona-pgbackrest
      - percona-pgbackrest-doc
  when: ansible_os_family == "Debian"

- name: Install pgbackrest RHEL
  yum:
    name: percona-pgbackrest
  when: ansible_os_family == "RedHat"

- name: Install pgrepack Debian
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - percona-postgresql-11-repack
      - percona-postgresql-11-repack-dbgsym
  when: ansible_os_family == "Debian"

- name: Install pgrepack RHEL
  yum:
    name: percona-pg_repack11
  when: ansible_os_family == "RedHat"