---
scenario:
  name: min-amazon-2
dependency:
  name: galaxy
driver:
  name: ec2
platforms:
  - name: pxc2-80-common-min-amazon-2-upgrade
    region: us-west-1
    image: ami-061352bb71c4724b2
    vpc_subnet_id: subnet-04a8ad1b1d4da874c
    instance_type: t2.small
    ssh_user: ec2-user
    root_device_name: /dev/xvda
    instance_tags:
      iit-billing-tag: jenkins-pxc-worker
      job-name: ${JOB_NAME}
  - name: pxc3-80-common-min-amazon-2-upgrade
    region: us-west-1
    image: ami-061352bb71c4724b2
    vpc_subnet_id: subnet-04a8ad1b1d4da874c
    instance_type: t2.small
    ssh_user: ec2-user
    root_device_name: /dev/xvda
    instance_tags:
      iit-billing-tag: jenkins-pxc-worker
      job-name: ${JOB_NAME}
provisioner:
  name: ansible
  playbooks:
    create: ../../../playbooks/create.yml
    destroy: ../../../../playbooks/destroy.yml
    prepare: ../../../playbooks/prepare.yml
    converge: ../../playbooks/playbook.yml
    side_effect: ../../../../../playbooks/pxc80_upgrade_common.yml
  inventory:
    host_vars:
      pxc2-80-common-min-amazon-2-upgrade:
        ip_env: "{{ ansible_host }}"
      pxc3-80-common-min-amazon-2-upgrade:
        ip_env: "{{ ansible_host }}"
        sleep_before_tests: 40
