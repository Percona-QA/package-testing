---
# This playbook installs PS/PXC client package and checks that it works correctly

- hosts: all
  name: Prepare a clean machine with percona (and EPEL) repo(s) installed
  become: true
  become_method: sudo
  vars:
    client: "{{ lookup('env', 'client_to_test') }}"

  tasks:
  - name: include tasks for test env setup
    import_tasks: ../tasks/test_prep.yml

  - name: include tasks for enabling main repo
    include: ../tasks/enable_main_repo.yml
    when: (lookup('env', 'install_repo') == "main") and (lookup('env', 'client_to_test') != "ps80")

  - name: include tasks for enabling main repo
    include: ../tasks/enable_ps8_main_repo.yml
    when: (lookup('env', 'install_repo') == "main") and (lookup('env', 'client_to_test') == "ps80")

  - name: include tasks for enabling PS 8 test repo
    include: ../tasks/enable_ps8_testing_repo.yml
    when: (lookup('env', 'install_repo') == "testing") and (lookup('env', 'client_to_test') == "ps80")

  - name: include tasks for enabling test repo
    include: ../tasks/enable_testing_repo.yml
    when: (lookup('env', 'install_repo') == "testing") and (lookup('env', 'client_to_test') != "ps80")

  - name: install deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - vim
    when: ansible_os_family == "Debian"

  - name: install packages in centos
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - pv
    when: ansible_os_family == "RedHat"

  - name: install PS/PXC client and run the check
    command: /package-testing/client_check.sh {{ client }}
