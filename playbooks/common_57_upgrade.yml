---
# This playbook does following:
#   sets main Percona repo
#   installs PS 5.7, PT and PXB 2.4
#   changes repo to testing
#   upgrades packages to the new version
#   does some tests

# Cosmic is still missing python
# import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: include tasks for test env setup
    include: ../tasks/test_prep.yml

#
# Install from main repository
#
  - name: include tasks for enabling main repo
    include: ../tasks/enable_main_repo.yml

  - name: include tasks for local vault setup
    include_tasks: ../tasks/setup_local_vault.yml

  - name: setup config file for keyring vault
    template: src=../scripts/ps_keyring_plugins_test/keyring_vault_test_v2.j2
              dest=/package-testing/scripts/ps_keyring_plugins_test/keyring_vault_test.cnf
              mode=0664 owner=root group=root

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

  - name: install PS 5.7 packages from main repos
    include_tasks: ../tasks/install_ps57.yml

  - name: install Percona Toolkit packages from main repos
    include_tasks: ../tasks/install_pt.yml

  - name: install sysbench packages from main repos
    include_tasks: ../tasks/install_sysbench.yml

  - name: install Percona XtraBackup 2.4 packages from main repos
    include_tasks: ../tasks/install_pxb24.yml

  - name: list installed packages
    include_tasks: ../tasks/list_installed_packages.yml

  - name: start mysql service with service command
    command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mysql service with systemctl command
    command: systemctl start mysql
    when: (ansible_distribution == "Amazon") or (ansible_os_family == "RedHat" and ansible_distribution_major_version >= "7")

  - name: set root password on centos
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: copy .my.cnf with credentials on centos
    template: src=../templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"

  - name: disable selinux on centos7 for TokuDB to work
    shell: setenforce 0 || true
    when: ansible_os_family == "RedHat"

  - name: install tokudb and restart server
    command: /usr/bin/ps_tokudb_admin --enable

  - name: restart mysql service
    service: name=mysql state=restarted

  - name: re-run ps_tokudb_admin to finish tokudb install
    command: /usr/bin/ps_tokudb_admin --enable

  - name: install plugins, import world database, test tokudb
    command: /package-testing/plugins_test_57u.sh ps

  - name: re-run ps_admin to install rocksdb
    command: /usr/bin/ps-admin --enable-rocksdb

  - name: install 3rd party packages with apt
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "Debian"

  - name: install 3rd party packages with yum
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "RedHat"

  - name: start my.cnf change test
    command: /package-testing/check_mycnf_pre.sh

  - name: PAM test
    include_tasks: ../tasks/pam_test.yml
#
# Enable testing repository
#
  - include: ../tasks/enable_testing_repo.yml

#
# Upgrade packages
#
  - name: upgrade Percona release to new rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - percona-release
    when: ansible_os_family == "RedHat"

  - name: upgrade Percona release to new apt packages
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - percona-release
    when: ansible_os_family == "Debian"

  - name: install PS 5.7 packages from main repos
    include_tasks: ../tasks/install_ps57.yml

  - name: install Percona Toolkit packages from main repos
    include_tasks: ../tasks/install_pt.yml

  - name: install sysbench packages from main repos
    include_tasks: ../tasks/install_sysbench.yml

  - name: install Percona XtraBackup 2.4 packages from main repos
    include_tasks: ../tasks/install_pxb24.yml

  - name: list installed packages
    include_tasks: ../tasks/list_installed_packages.yml

  - name: run mysql_upgrade
    command: mysql_upgrade -uroot

  - name: restart mysql service
    service: name=mysql state=restarted

  - name: check that Percona Server version is correct
    command: /package-testing/version_check.sh ps57

  - name: check that Percona Server package versions are correct
    command: /package-testing/package_check.sh ps57

# - name: check that Percona Toolkit version is correct
#   command: /package-testing/version_check.sh pt

  - name: finish my.cnf change test
    command: /package-testing/check_mycnf_post.sh

  - name: run some MyRocks tests
    command: /package-testing/scripts/ps_myrocks_test.sh

  - name: keyring plugins test
    command: /package-testing/scripts/ps_keyring_plugins_test/ps_keyring_plugins_test.sh ps57

  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb24

  - name: check that Percona XtraBackup package versions are correct
    command: /package-testing/package_check.sh pxb24

  - name: run bats unit tests for ps_tokudb_admin scripts
    command: /usr/local/bin/bats /package-testing/bats/ps_tokudb_admin_unit.bats

  - name: run bats integration tests for ps_tokudb_admin script
    command: /usr/local/bin/bats /package-testing/bats/ps_tokudb_admin_integration.bats

  - name: run bats unit tests for ps-admin script
    command: /usr/local/bin/bats /package-testing/bats/ps-admin_unit.bats

  - name: run bats integration tests for ps-admin script
    command: /usr/local/bin/bats /package-testing/bats/ps-admin_integration.bats

  - name: run bats tests for mysql init scripts
    command: /usr/local/bin/bats /package-testing/bats/mysql-init-scripts.bats

  - name: start mysql service
    service: name=mysql state=started

  - name: remove PS 5.7 packages
    include_tasks: ../tasks/remove_ps57.yml

  - name: check if process is stopped after package removal
    command: /package-testing/check_running.sh mysql stopped

  - stat:
      path: /var/lib/mysql
    register: p

  - name: check /var/lib/mysql exists and not empty
    fail:
      msg: "Path exists and is a directory and is not empty"
    when: p.stat.isdir is defined and p.stat.isdir and p.stat.size > 1000000
