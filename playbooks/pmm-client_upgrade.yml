---
# This playbook does following:
#   enables Percona main repository
#   installs previous version of PMM client and PT
#   enables Percona testing repository
#   upgrades PMM client and PT to the latest version
#   does some tests

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: include tasks for enabling main repo
    include_tasks: ../tasks/enable_main_repo.yml

  - name: install Percona Toolkit old deb packages
    apt: name={{item}} update_cache=yes state=latest
    with_items:
    - percona-toolkit
    when: ansible_os_family == "Debian"

  - name: install Percona Toolkit old rpm packages
    yum: name={{item}} state=latest
    with_items:
    - percona-toolkit
    when: ansible_os_family == "RedHat"

  - name: install PMM client old deb packages
    apt: name={{item}} update_cache=yes state=latest
    with_items:
    - pmm-client
    when: ansible_os_family == "Debian"

  - name: install PMM client old rpm packages
    yum: name={{item}} state=latest
    with_items:
    - pmm-client
    when: ansible_os_family == "RedHat"

  - name: include tasks for enabling testing repo
    include: ../tasks/enable_testing_repo.yml

  - name: upgrade Percona Toolkit to the latest deb packages
    apt: name={{item}} update_cache=yes state=latest
    with_items:
    - percona-toolkit
    when: ansible_os_family == "Debian"

  - name: upgrade Percona Toolkit to the latest rpm packages
    yum: name={{item}} state=latest
    with_items:
    - percona-toolkit
    when: ansible_os_family == "RedHat"

  - name: upgrade PMM client to the latest deb packages
    apt: name={{item}} update_cache=yes state=latest
    with_items:
    - pmm-client
    when: ansible_os_family == "Debian"

  - name: upgrade PMM client to the latest rpm packages
    yum: name={{item}} state=latest
    with_items:
    - pmm-client
    when: ansible_os_family == "RedHat"

  - name: check that PMM client version is correct
    command: /package-testing/version_check.sh pmm

  - name: remove PMM client deb packages
    apt: name={{item}} state=absent
    with_items:
    - pmm-client
    when: ansible_os_family == "Debian"

  - name: remove PMM client rpm packages
    yum: name={{item}} state=absent
    with_items:
    - pmm-client
    when: ansible_os_family == "RedHat"

  - name: remove Percona Toolkit deb packages
    apt: name={{item}} state=absent
    with_items:
    - percona-toolkit
    when: ansible_os_family == "Debian"

  - name: remove Percona Toolkit rpm packages
    yum: name={{item}} state=absent
    with_items:
    - percona-toolkit
    when: ansible_os_family == "RedHat"
