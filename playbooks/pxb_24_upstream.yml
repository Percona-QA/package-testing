---
# This playbook installs MySQL 5.7

# Cosmic is still missing python
- import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo

  tasks:

  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: Install MySQL apt repository package
    apt:
      deb: https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
    when: ansible_os_family == "Debian"

  - name: Import key for mysql-repo
    apt_key:
      state: present
      url: http://repo.mysql.com/RPM-GPG-KEY-mysql-2022
    when: ansible_os_family == "Debian"  

  - name: replace the default 8.0 repo with 5.7
    replace:
      path: /etc/apt/sources.list.d/mysql.list
      regexp: 'mysql-8.0'
      replace: 'mysql-5.7'
      backup: yes
    when: ansible_os_family == "Debian"

  - name: Install MySQL RHEL 6 yum repository package
    yum: name=https://dev.mysql.com/get/mysql80-community-release-el6-2.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: Install MySQL RHEL 7 yum repository package
    yum: name=https://dev.mysql.com/get/mysql80-community-release-el7-5.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

    # Note: Mysql 5.7 packages for RHEL8/CentOS8 do not exist in mysql80-community-release-el8-1.noarch.rpm, hence we can't run the upstream script for CentOS8 till the packages are available. Uncomment following section after MS5.7 packages are available for Centos8.
    # - name: Install MySQL RHEL 8 yum repository package
    #   yum: name=https://dev.mysql.com/get/mysql80-community-release-el8-1.noarch.rpm state=present
    #   when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
    
  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

  - name: install MySQL Community deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - mysql-community-server
    when: ansible_os_family == "Debian"

  - name: install packages in centos
    yum:
      disablerepo: mysql80-community
      enablerepo: mysql57-community
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - mysql-community-server
    when: ansible_os_family == "RedHat"

  - name: Start the MySQL service
    service: name=mysql state=started
    when: ansible_os_family == "Debian"

  - name: Start the MySQL service
    service: name=mysqld state=started
    when: ansible_os_family == "RedHat"

  - name: set root password
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: include tasks for enabling tools test repo
    include: ../tasks/enable_tools_testing_repo.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling tools main repo
    include: ../tasks/enable_tools_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: install Percona XtraBackup 2.4 packages
    include_tasks: ../tasks/install_pxb24.yml

  - name: install plugins, import world database
    command: /package-testing/plugins_test.sh

  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb24

  - name: check that Percona XtraBackup package versions are correct
    command: /package-testing/package_check.sh pxb24

  - name: run backup
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backups/

  - name: prepare the backup
    command: /usr/bin/xtrabackup --prepare --user=root --target-dir=/tmp/backups/
