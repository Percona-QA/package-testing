---
# Advanced package test:
#   prepare Percona Repository and software
#   install PMM client tarball with gssapi
#   perform correct setup
#   setup PSMDB and
#   verify versions, metrics, exporters, etc.
#
- hosts: all
  become: true
  become_method: sudo
  vars:
    pmm_server_address: "{{ lookup('env', 'PMM_SERVER_IP') | default('127.0.0.1', true)}}"
    pmm_server_password: "{{ lookup('env', 'ADMIN_PASSWORD') | default('admin', true) }}"
    test_package: "{{ lookup('env', 'install_package') | default('pmm3-client', true)}}"
    test_repo: "{{ lookup('env', 'install_repo') }}"
    metrics_mode: "{{ lookup('env', 'METRICS_MODE') | default('auto', true) }}"
    pmm_version: "{{ lookup('env', 'PMM_VERSION') | regex_search('\\S(.*\\S)?') }}"
    tarball_link: "{{ lookup('env', 'TARBALL_LINK') }}"
    mongodb_connection_type: "gssapi"

  tasks:
  - name: Register Instance IP
    shell: echo $(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
    register: instance_ip

  - name: Register Instance IP as a variable
    set_fact:
      instance_ip: "{{ instance_ip.stdout }}"

  - name: Set Integrations list
    include_tasks: ../tasks/pmm3-client_test_enabled_db_arm.yml
    when: ansible_architecture == "aarch64"

  - name: Set Integrations list
    include_tasks: ../tasks/pmm3-client_test_enabled_db.yml
    when: ansible_architecture != "aarch64"

  - name: Setup environment
    include_tasks: ../tasks/pmm3_client_test_prepare.yml

### Install PMM Client from tarball
  - name: Print out URL of PMM Client tarball
    debug:
      var: tarball_link

  - name: install pmm3-client tarball
    command: "../scripts/pmm3_client_install_tarball.sh -v {{ (tarball_link | length > 0) | ternary(tarball_link, pmm_version) }}"

  - name: check that PMM client version is correct
    include_tasks: ../tasks/verify_pmm_client_version.yml

### Setup PMM Client
  - name: Use pmm-agent setup to configure pmm client to connect to server
    shell: >-
      pmm-agent setup --config-file=/usr/local/percona/pmm/config/pmm-agent.yaml --force --server-insecure-tls
      --server-address={{ pmm_server_address }}
      --metrics-mode={{ metrics_mode }}
      --server-username=admin
      --server-password={{ pmm_server_password }}
      {{ instance_ip }} generic node2_{{ instance_ip }}
  - name: Check if the configuration generated with paths-base is using the custom path
    include_tasks: ../tasks/verify_pmm3_client_config.yml

  - name: Start agent
    shell: pmm-agent --debug --config-file=/usr/local/percona/pmm/config/pmm-agent.yaml > pmm-agent.log 2>&1 &

  - name: "Verify PMM client version is {{ pmm_version }}"
    include_tasks: ../tasks/verify_pmm_status_versions.yml

# start PSMDB
  - set_fact:
      mongo_service_name: "mongodb_{{ instance_ip }}_{{ ansible_distribution }}_{{ ansible_distribution_major_version }}"

  - name: Install and start Percona Server MongoDB with GSSAPI
    when: '"psmdb-" in enabled_db | join("")'
    include_tasks: ../tasks/install_and_add_to_pmm_psmdb_gssapi.yml
    vars:
      psmdb_to_test:  "{{ enabled_db | select('match', '^psmdb-*') | join('') }}"

  - name: Verify MongoDB Exporter metric endpoint with Auth
    when: '"psmdb-" in enabled_db | join("")'
    include_tasks: ../tasks/verify_pmm3_service_metric.yml
    loop:
      - { service_name: '{{ mongo_service_name }}', metric: 'mongodb_up.* 1' }
# end PSMDB

# verifications
  - name: Perform standard verifications set for PMM Client
    include_tasks: ../tasks/verifications_set_for_pmm3_client.yml