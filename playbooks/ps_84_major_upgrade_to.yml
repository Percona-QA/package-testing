---
# This playbook:
#   installs Percona Server 5.7 from testing repo
#   installs TokuDB, RocksDB and some other plugins
#   disables original repo
#   removes 5.7
#   enables ps-84 repo
#   installs 8.4 and repeats some tests
#   removes packages
#   NOTICE: it installs both 5.7 and 8.4 from testing repo!

- hosts: all
  become: true
  become_method: sudo
  vars:
    major_upgrade: true
    install_mysql_shell: "{{ lookup('env', 'install_mysql_shell', default='') }}"
    gnupg_home: /root/.gnupg
    percona_key1: 4D1BB29D63D98E422B2113B19334A25F8507EFA5
    percona_key1_file: "{{ gnupg_home }}/PERCONA-PACKAGING-KEY"
  environment:
    install_mysql_shell: '{{ install_mysql_shell }}'
    PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  tasks:
### start of PS 5.7 install
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: include tasks for local vault setup
    include_tasks: ../tasks/setup_local_vault.yml

  - name: setup config file for keyring vault
    template: src=../scripts/ps_keyring_plugins_test/keyring_vault_test_v2.j2
              dest=/package-testing/scripts/ps_keyring_plugins_test/keyring_vault_test.cnf
              mode=0664 owner=root group=root

  - name: include tasks for enabling test repo
    include_tasks: ../tasks/enable_testing_repo.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling main repo
    include_tasks: ../tasks/enable_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling experimental repo
    include_tasks: ../tasks/enable_experimental_repo.yml
    when: lookup('env', 'install_repo') == "experimental"

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

### install PS5.7 without TokuDB as PS8.4 do not support TokuDB
  - name: install Percona Server 5.7 packages
    include_tasks: ../tasks/install_ps57.yml
    vars:
      packages:
      - percona-server-server-5.7
      - percona-server-test-5.7
      - percona-server-5.7-dbg
      - percona-server-source-5.7
      - percona-server-rocksdb-5.7
    when: ansible_os_family == "Debian"

### install PS5.7 without TokuDB as PS8.4 do not support TokuDB
  - name: install Percona Server 5.7 packages
    include_tasks: ../tasks/install_ps57.yml
    vars:
      packages:
      - Percona-Server-server-57
      - Percona-Server-test-57
      - Percona-Server-57-debuginfo
      - Percona-Server-devel-57
      - Percona-Server-rocksdb-57
      - Percona-Server-shared-57
      - Percona-Server-client-57
    when: ansible_os_family == "RedHat"

# Disable Percona Toolkit installation till its supported in OL9 and Jammy
#  - name: install Percona Toolkit new deb packages
#    include_tasks: ../tasks/install_pt.yml

  - name: install sysbench packages
    include_tasks: ../tasks/install_sysbench.yml
    when: lookup('env', 'install_repo') != "experimental"

  - name: install Percona XtraBackup 2.4 packages
    include_tasks: ../tasks/install_pxb24.yml

  - name: list installed packages
    include_tasks: ../tasks/list_installed_packages.yml

  - name: start mysql service
    service: name=mysql state=started

  - name: set root password on centos
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: copy .my.cnf with credentials on centos
    template: src=../templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"

  - name: disable selinux on centos7
    shell: setenforce 0 || true
    when: ansible_os_family == "RedHat"

  - name: restart mysql service
    service: name=mysql state=restarted

#  - name: check that Percona Server version is correct
#    command: /package-testing/version_check.sh ps57

#  - name: check that Percona Server package versions are correct
#    command: /package-testing/package_check.sh ps57
#    environment:
#      ps57_tokudb: "no"

# - name: check that Percona Toolkit version is correct
#   command: /package-testing/version_check.sh pt
#   when: lookup('env', 'install_repo') != "experimental"

# - name: check that sysbench version is correct
#   command: /package-testing/version_check.sh sysbench
#   when: lookup('env', 'install_repo') != "experimental"

  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb24
    when: lookup('env', 'install_repo') != "experimental"

  - name: check that Percona XtraBackup package versions are correct
    command: /package-testing/package_check.sh pxb24
    when: lookup('env', 'install_repo') != "experimental"

  - name: install 3rd party packages with apt
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "Debian"

  - name: install 3rd party packages with yum
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "RedHat"

  - name: start mysql service
    service: name=mysql state=started

# temporary commented out until BLD-906 is fixed
# - name: check that mysqladmin shutdown works correctly
#   command: /package-testing/madmin_check.sh

  - name: disable all percona repos
    command: percona-release disable all

  - name: get my.cnf stats
    stat: path=/etc/my.cnf
    register: mycnf

  - name: copy config file to backup
    copy:
      src: /etc/my.cnf
      dest: /etc/my.cnf.backup
      remote_src: yes
    when: mycnf.stat.exists and ansible_os_family == "RedHat"

  - name: remove PS 5.7 packages
    include_tasks: ../tasks/remove_ps57.yml

  - name: check if process is stopped after package removal
    command: /package-testing/check_running.sh mysql stopped

  - stat:
      path: /var/lib/mysql
    register: p

  - name: check /var/lib/mysql exists and not empty
    fail:
      msg: "Path exists and is a directory and is not empty"
    when: p.stat.isdir is defined and p.stat.isdir and p.stat.size > 1000000
### end of PS 5.7 install

  - name: copy config file to original location
    copy:
      src: /etc/my.cnf.backup
      dest: /etc/my.cnf
      remote_src: yes
      force: yes
    when: (ansible_distribution == "Amazon") or (ansible_os_family == "RedHat" and ansible_distribution_major_version >= "7")

  - name: restore percona-server.conf.d and mysql.cnf.d
    shell: |
      mv /etc/percona-server.conf.d_backup-* /etc/percona-server.conf.d
      mv /etc/my.cnf.d_backup-* /etc/my.cnf.d
    when: (ansible_distribution == "Amazon") or (ansible_os_family == "RedHat" and ansible_distribution_major_version >= "7")

  - name: remove PXB 2.4 packages
    include_tasks: ../tasks/remove_pxb24.yml

  - name: include tasks for enabling PS 8 main repo
    include_tasks: ../tasks/enable_ps8_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling PS 8 test repo
    include_tasks: ../tasks/enable_ps8_testing_repo.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: append include for RedHat
    lineinfile:
        path: /etc/my.cnf
        line: '!includedir /etc/my.cnf.d'
    when: ansible_os_family == "RedHat"

  - name: install Percona Server 8.4 packages
    include_tasks: ../tasks/install_ps84.yml

  - name: Enable PXB 84 repo
    command: percona-release enable-only pxb-84-lts testing

  - name: install PXB 8.4 packages
    include_tasks: ../tasks/install_pxb84.yml

  - name: enable the Tools release repo
    command: percona-release enable tools release

  - name: install percona-mysql-shell package
    include_tasks: ../tasks/install_pshell.yml
    when: install_mysql_shell == "yes" or install_mysql_shell == ""
    
  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb84
    when: lookup('env', 'install_repo') != "experimental"

  - name: list installed packages
    include_tasks: ../tasks/list_installed_packages.yml

  - name: start mysql service
    service: name=mysql state=started

  - name: check that Percona Server version is correct
    command: /package-testing/version_check.sh ps84

  - name: check that Percona Server package versions are correct
    command: /package-testing/package_check.sh ps84
 
#  - name: run bats tests for PAM
#    command: /usr/local/bin/bats /package-testing/scripts/ps_pam_test/ps_pam_test.bats

#  - name: keyring plugins test
#    command: /package-testing/scripts/ps_keyring_plugins_test/ps_keyring_plugins_test.sh ps84

  - name: run bats unit tests for ps-admin script
    command: /usr/local/bin/bats /package-testing/bats/ps-admin_unit.bats

  - name: run bats integration tests for ps-admin script
    command: /usr/local/bin/bats /package-testing/bats/ps-admin_integration.bats

  - name: run bats tests for mysql init scripts
    command: /usr/local/bin/bats /package-testing/bats/mysql-init-scripts.bats

  - name: remove PS 8.4 packages
    include_tasks: ../tasks/remove_ps84.yml

  - name: check if process is stopped after package removal
    command: /package-testing/check_running.sh mysql stopped

  - stat:
      path: /var/lib/mysql
    register: p

  - name: check /var/lib/mysql exists and not empty
    fail:
      msg: "Path exists and is a directory and is not empty"
    when: p.stat.isdir is defined and p.stat.isdir and p.stat.size > 1000000
