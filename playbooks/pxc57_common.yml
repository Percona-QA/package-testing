---
# This playbook sets up the PXC node from testing repo

- hosts: all
  become: true
  become_method: sudo

  tasks:
  # find vm ip so that it can be used in templates
  - debug: var=ansible_all_ipv4_addresses
  - set_fact:
      man_ip: "{{ item }}"
    with_items: "{{ ansible_all_ipv4_addresses }}"
    when: "item.startswith('192.168')"
  - debug: var=man_ip

  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: include tasks for enabling test repo
    include_tasks: ../tasks/enable_pxc57_testing_repo.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling main repo
    include_tasks: ../tasks/enable_pxc57_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling experimental repo
    include_tasks: ../tasks/enable_pxc57_experimental_repo.yml
    when: lookup('env', 'install_repo') == "experimental"

# - name: include tasks for enabling experimental repo
#   include_tasks: ../tasks/enable_pxc57_experimental_repo.yml

  - name: disable selinux
    selinux: state=disabled
    when: ansible_os_family == "RedHat"

  - name: add firewall rules
    command: /sbin/iptables -I INPUT -s {{item}} -p tcp -j ACCEPT
    with_items:
    - 192.168.70.63
    - 192.168.70.62
    - 192.168.70.61
    when: ansible_os_family == "RedHat"

  - name: install PXC 5.7 new deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - percona-xtradb-cluster-full-57
      - percona-xtradb-cluster-57
      - percona-xtradb-cluster-source-5.7
    when: ansible_os_family == "Debian"

  - name: install python mysql deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - python-mysqldb
    when: ansible_os_family == "Debian" and ansible_distribution_release != "focal"

  - name: install python mysql deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - python3-mysqldb
    when: ansible_os_family == "Debian" and ansible_distribution_release = "focal"

  - name: install PXC 5.7 new rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - Percona-XtraDB-Cluster-full-57
      - Percona-XtraDB-Cluster-57
    when: ansible_os_family == "RedHat"

  - name: stop mysql service with service command
    command: service mysql stop

  - name: copy PXC config on centos 6
    template: src=../templates/my_rpm.j2 dest=/etc/my.cnf
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: copy PXC config on centos 7
    template: src=../templates/my_rpm_7.j2 dest=/etc/my.cnf
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "7"

  - name: copy PXC config on debian/ubuntu
    template: src=../templates/my.j2
              dest=/etc/mysql/my.cnf
              mode=0640 owner=mysql group=root
    when: ansible_os_family == "Debian"

  - name: copy .my.cnf with credentials
    template: src=../templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"

  - name: start mysql service
    service: name=mysql state=started

  - name: register PXC version
    shell: mysqld --version
    register: pxc_version
    when: lookup('env', 'check_version') != "yes" and lookup('env', 'check_version') != ""

  - name: print PXC version
    debug: var=pxc_version
    when: lookup('env', 'check_version') != "yes" and lookup('env', 'check_version') != ""

  - name: check that PXC version is correct
    command: /package-testing/version_check.sh pxc57
    when: lookup('env', 'check_version') == "yes" or lookup('env', 'check_version') == ""

  - name: check that PXC package versions are correct
    command: /package-testing/package_check.sh pxc57
    when: lookup('env', 'check_version') == "yes" or lookup('env', 'check_version') == ""

  - name: run bats tests for mysql init scripts
    command: /usr/local/bin/bats /package-testing/bats/pxc-init-scripts.bats

  - name: start mysql service
    service: name=mysql state=started
