---
- hosts: all
  become: true
  become_method: sudo
  vars:
    pmm_server_address: "{{ lookup('env', 'PMM_SERVER_IP') | default('127.0.0.1', true)}}"
    pmm_server_password: "{{ lookup('env', 'ADMIN_PASSWORD') | default('admin', true) }}"
    test_package: "{{ lookup('env', 'install_package') | default('pmm3-client', true)}}"
    test_repo: "{{ lookup('env', 'install_repo') }}"
    metrics_mode: "{{ lookup('env', 'METRICS_MODE') | default('auto', true) }}"
    pmm_version: "{{ lookup('env', 'PMM_VERSION') }}"
    tarball_link: "{{ lookup('env', 'tarball_link') }}"
    agent_password: "pmm-pass"
    pmm_auth_password: "pmm-pass"

  tasks:
  - name: Register Instance IP
    shell: echo $(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
    register: instance_ip

  - name: Register Instance IP as a variable
    set_fact:
      instance_ip: "{{ instance_ip.stdout }}"

  - name: Set Integrations list
    include_tasks: ../../tasks/pmm3-client_test_enabled_db_arm.yml
    when: ansible_architecture == "aarch64"

  - name: Set Integrations list
    include_tasks: ../../tasks/pmm3-client_test_enabled_db.yml
    when: ansible_architecture != "aarch64"

  - name: include tasks for test env setup
    include_tasks: ../../tasks/pmm3_client_test_prepare.yml

  - name: Install PMM client new deb packages
    when: ansible_os_family == "Debian"
    shell: |
      sudo apt-get update
      sudo apt-get install pmm-client

  - name: Install PMM client new rpm packages
    when: ansible_os_family == "RedHat"
    shell: |
      sudo yum -y update
      sudo yum -y install pmm-client

  - name: check that PMM client version is correct
    include_tasks: ../../tasks/verify_pmm_client_version.yml

  - name: configure pmm client to connect to server in push/auto Mode
    when: lookup('env', 'metrics_mode') == "push" or lookup('env', 'metrics_mode') == ""
    shell: pmm-admin config --force --server-insecure-tls --metrics-mode=auto --agent-password={{ pmm_auth_password }} --server-url=https://admin:{{ pmm_server_password }}@{{ pmm_server_address }} {{ instance_ip }} generic node_{{ instance_ip }}

  - name: configure pmm client to connect to server in pull Mode
    when: lookup('env', 'metrics_mode') == "pull"
    shell: pmm-admin config --force --server-insecure-tls --metrics-mode=pull --agent-password={{ pmm_auth_password }} --server-url=https://admin:{{ pmm_server_password }}@{{ pmm_server_address }} {{ instance_ip }} generic node_{{ instance_ip }}

# investigate adding split pmm-admin config --force --agent-password=<PASSWORD> and restart the agent

### start PS
  - name: Install and start Percona Server
    include_tasks: ../../tasks/install_add_and_verify_ps.yml
## end PS

### start PSMDB
  - name: Install and start Percona Server for Mongo DB
    include_tasks: ../../tasks/install_add_and_verify_psmdb.yml
### end PSMDB

### start PDPGSQL
  - name: Install and start Percona Distribution for PGSQL
    include_tasks: ../../tasks/install_add_and_verify_pdpgsql.yml
## end PDPGSQL

### verifications
  - name: Set correct pass for node exporter
    set_fact:
      agent_password: "pmm-pass"

  - name: Perform standard verifications set for PMM Client
    include_tasks: ../../tasks/verifications_set_for_pmm3_client.yml
