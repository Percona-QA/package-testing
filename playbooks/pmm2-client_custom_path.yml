---
# Basic tarball test:
#   prepare Percona Repository and software
#   install PMM client from tarball
#   perform wrong setup
#   perform correct setup
#   verify versions etc.

- hosts: all
  become: true
  become_method: sudo
  vars:
    pmm_server_address: "{{ lookup('env', 'PMM_SERVER_IP') }}"
    pmm_server_password: "{{ lookup('env', 'ADMIN_PASSWORD') | default('admin', true) }}"
    test_repo: "{{ lookup('env', 'install_repo') }}"
    metrics_mode: "{{ lookup('env', 'METRICS_MODE') | default('auto', true) }}"
    pmm_version: "{{ lookup('env', 'PMM_VERSION') }}"
    custom_path: "/pmm2-client-custom-path"

  tasks:
  - name: Register Instance IP
    shell: echo $(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
    register: instance_ip

  - name: Register Instance IP as a variable
    set_fact:
      instance_ip: "{{ instance_ip.stdout }}"

### install pmm2-client from tarball
  - name: Install pmm2-client tarball to custom path
    command: "../scripts/pmm2_client_install_tarball.sh -v {{ pmm_version }} -p {{ custom_path }}"

  - name: check that PMM client version is correct
    include_tasks: ../tasks/verify_pmm_client_version.yml

### Setup PMM Client
  - name: Use pmm-agent setup to configure pmm client with wrong path-base
    shell: pmm-agent setup --config-file={{ custom_path }}/config/pmm-agent.yaml --force --server-insecure-tls --server-address={{ pmm_server_address }} --metrics-mode={{ metrics_mode }} --server-username=admin --server-password={{ pmm_server_password }} --paths-base=/wrong_folder/ {{ instance_ip }} generic node2_{{ instance_ip }}

  - name: Start agent
    shell: pmm-agent --config-file={{ custom_path }}/config/pmm-agent.yaml > pmm-agent.log 2>&1 &

  - name: Wait for node_exporter to have Waiting Status.
    shell: pmm-admin list | grep 'node_exporter' | awk -F" " '{print $2}'
    register: node_exporter_status
    until: node_exporter_status.stdout.find('Waiting') != -1
    delay: 5
    retries: 5

  - name: Check pmm-agent log to see the error about wrong base path
    shell: cat pmm-agent.log | grep 'no such file or directory'

### Setup PMM Client
  - name: Use "pmm-admin config" to set correct  path base
    shell: pmm-admin config --force --server-insecure-tls --metrics-mode={{ metrics_mode }} --paths-base={{ custom_path }}/  --server-url=https://admin:{{ pmm_server_password }}@{{ pmm_server_address }} {{ instance_ip }} generic node_{{ instance_ip }}

  - name: Check if the configuration generated with paths-base is using the custom path
    shell: cat {{custom_path}}/config/pmm-agent.yaml | grep -o -c "{{custom_path}}" | grep "14"
    become: yes

  - name: Start agent
    shell: pmm-agent --config-file={{ custom_path }}/config/pmm-agent.yaml > pmm-agent.log 2>&1 &

### verifications
  - name: Check that PMM client version is correct
    include_tasks: ../tasks/verify_pmm_status_versions.yml

  - name: Wait for node_exporter to have Running Status.
    shell: pmm-admin list | grep 'node_exporter' | awk -F" " '{print $2}'
    register: node_exporter_status
    until: node_exporter_status.stdout.find('Running') != -1
    delay: 5
    retries: 5

  - name: PMM-8141 fix for deleted vmscrpconfig file, file being created with vmagent reload
    command: "{{item}}"
    with_items:
      - "rm -r /tmp/vm_agent"
      - "pkill -f vmagent"
    become: yes


  - name: PMM-8141 verify new vmscrpconfig folder is created at tmp after killing vmagent process
    command: "ls -la /tmp/vm_agent"
    register: vm_agent_folder_ls
    become: yes
    until: vm_agent_folder_ls.stdout != ""
    delay: 1
    retries: 10

  - name: Wait for VMAGENT to have Running Status.
    shell: pmm-admin list | grep 'vmagent' | awk -F" " '{print $2}'
    register: vmagent_status
    until: vmagent_status.stdout.find('Running') != -1
    delay: 5
    retries: 5
