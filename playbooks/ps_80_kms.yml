---
# This playbook does the following:
#   enables Percona testing repository
#   installs latest version of PS 8.0 with kms component and runs some tests

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: include tasks for enabling PS 8 test repo
    include: ../tasks/enable_ps8_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling PS 8 test repo
    include: ../tasks/enable_ps8_testing_repo.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling PS 8 experimental repo
    include: ../tasks/enable_ps8_experimental_repo.yml
    when: lookup('env', 'install_repo') == "experimental"

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

  - name: install Percona Server 8.0 packages
    include_tasks: ../tasks/install_ps80.yml

  - name: install sysbench new deb packages
    include_tasks: ../tasks/install_sysbench.yml
    when: lookup('env', 'install_repo') != "experimental"

  - name: list installed packages
    include_tasks: ../tasks/list_installed_packages.yml

  - name: stop mysql service
    service: name=mysql state=stopped

  - name: remove mysql data directory
    command: rm -r /var/lib/mysql

  - name: copy the global manifest for mysql
    copy:
        src: /package-testing/kms/mysqld.my
        dest: /usr/sbin/
        remote_src: yes

  - name: create the global configuration file for mysql
    blockinfile:
        path: /usr/lib64/mysql/plugin/
        mode: '0644'
        create: true
        block: |
            { "path": "/var/lib/mysql/keyring_kms", "region": "us-east-1", "kms_key": "{{ key_id }}", "auth_key": "{{ access_key }}", "secret_access_key": "{{ secret_key }}", "read_only": false }
        vars:
            key_id: "{{ lookup('env', 'KMS_KEY_ID') }}"
            access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
            secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    when: ansible_os_family == "Debian"

  - name: copy the encryption config file on Debian/Ubuntu
    copy:
        src: /package-testing/kms/encryption.j2
        dest: /etc/mysql/conf.d/encryption.cnf
        remote_src: yes
    when: ansible_os_family == "Debian"

  - name: append include for RedHat
    lineinfile:
        path: /etc/my.cnf
        line: '!includedir /etc/my.cnf.d'
    when: ansible_os_family == "RedHat"

  - name: copy the encryption config file on RHEL/CentOS/Amazon
    copy:
        src: /package-testing/kms/encryption.j2
        dest: /etc/my.cnf.d/encryption.cnf
        remote_src: yes
    when: ansible_os_family == "RedHat"

  - name: start mysql service
    service: name=mysql state=started

  - name: check mysql service status
    command: /package-testing/check_running.sh mysql running

  - name: set root password on centos
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: check that Percona Server package versions are correct
    command: /package-testing/package_check.sh ps80

  - name: import world database
    command: /package-testing/plugins_test.sh
