---
# This playbook does following:
#   enables Percona testing repository
#   installs latest version of PS 5.6, PT and PXB 2.3
#   does some tests

# Cosmic is still missing python
- import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: include tasks for enabling test repo
    include: ../tasks/enable_testing_repo.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling main repo
    include: ../tasks/enable_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling experimental repo
    include: ../tasks/enable_experimental_repo.yml
    when: lookup('env', 'install_repo') == "experimental"

  - name: include tasks for enabling laboratory and main repos
    include: ../tasks/enable_laboratory_with_main_repo.yml
    when: lookup('env', 'install_repo') == "laboratory"

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

  - name: install Percona Toolkit new packages
    include_tasks: ../tasks/install_pt.yml

  - name: install sysbench new packages
    include_tasks: ../tasks/install_sysbench.yml

  - name: install PS 5.6 packages
    include_tasks: ../tasks/install_ps56.yml

  - name: install PXB 2.4 packages
    include_tasks: ../tasks/install_pxb24.yml

  - name: Make sure SELinux is in enforcing mode on CentOS
    selinux:
      policy: targeted
      state: enforcing
    when: ansible_os_family == "RedHat"

  - name: start mysql service with service command
    command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mysql service with systemctl command
    command: systemctl start mysql
    when: (ansible_distribution == "Amazon") or (ansible_os_family == "RedHat" and ansible_distribution_major_version == "7")

  - name: disable selinux on centos for TokuDB to work
    shell: setenforce 0 || true
    when: ansible_os_family == "RedHat"

# Start PAM test
  - group:
      name: developer
      state: present

  - group:
      name: dbadmin
      state: present

  - user:
      name: test_pam
      shell: /bin/bash
      password: $6$mrqBDJUyh13p$elUkdb99/v4fPxnLIS2TAXSUhVt16PvOvIPzVqobKKZKHHMRyXOmJ4puhybn0Go0HpL1RNYvREgqF02qYnGOX1

  - user:
      name: test_pam2
      shell: /bin/bash
      password: $6$mrqBDJUyh13p$elUkdb99/v4fPxnLIS2TAXSUhVt16PvOvIPzVqobKKZKHHMRyXOmJ4puhybn0Go0HpL1RNYvREgqF02qYnGOX1
      groups: developer
      append: yes

  - user:
      name: test_pam3
      shell: /bin/bash
      password: $6$mrqBDJUyh13p$elUkdb99/v4fPxnLIS2TAXSUhVt16PvOvIPzVqobKKZKHHMRyXOmJ4puhybn0Go0HpL1RNYvREgqF02qYnGOX1
      groups: dbadmin
      append: yes

  - user:
      name: test_pam_compat
      shell: /bin/bash
      password: $6$mrqBDJUyh13p$elUkdb99/v4fPxnLIS2TAXSUhVt16PvOvIPzVqobKKZKHHMRyXOmJ4puhybn0Go0HpL1RNYvREgqF02qYnGOX1

  - user:
      name: mysql
      groups: shadow
      append: yes
    when: ansible_os_family == "Debian"

  - file:
      path: /etc/shadow
      group: mysql
      mode: "g+r"
    when: ansible_os_family == "RedHat"

  - name: copy config file for mysql PAM into system dir
    template:
      src: ../scripts/ps_pam_test/mysqld
      dest: /etc/pam.d/mysqld
      owner: root
      group: root
      mode: 0644
      force: yes

  - name: restart mysql service
    service: name=mysql state=restarted

  - name: run mysql setup for PAM
    command: /usr/local/bin/bats /package-testing/scripts/ps_pam_test/ps_pam_mysql_setup.bats

  - name: run bats tests for PAM
    command: /usr/local/bin/bats /package-testing/scripts/ps_pam_test/ps_pam_test.bats
# End PAM test

  - name: install tokudb and restart server
    command: /usr/bin/ps_tokudb_admin --enable --enable-backup

  - name: restart mysql service
    command: service mysql restart

  - name: re-run ps_tokudb_admin to finish tokudb install
    command: /usr/bin/ps_tokudb_admin --enable --enable-backup

  - name: install plugins, import world database, test tokudb
    command: /package-testing/plugins_test_56.sh ps

  - name: check that Percona Server version is correct
    command: /package-testing/version_check.sh ps56

  - name: check that Percona Server package versions are correct
    command: /package-testing/package_check.sh ps56

  - name: check that Percona Toolkit version is correct
    command: /package-testing/version_check.sh pt
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version != "6"

  - name: check that sysbench version is correct
    command: /package-testing/version_check.sh sysbench

  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb24
    when: ansible_os_family == "Debian"

  - name: check that Percona XtraBackup package versions are correct
    command: /package-testing/package_check.sh pxb24
    when: ansible_os_family == "Debian"

  - name: run sysbench prepare script
    command: sysbench --mysql-user=root --mysql-db=sb --time=30 --threads=64 --tables=3 oltp_read_write prepare

  - name: run sysbench benchmark
    command: sysbench --mysql-user=root --mysql-db=sb --time=30 --threads=64 --tables=3 oltp_read_write run

  - name: run sysbench tpcc prepare script
    command: /usr/share/sysbench/tpcc.lua --mysql-user=root --mysql-db=sbt --time=30 --threads=64 --report-interval=1 --tables=3 --scale=5 --db-driver=mysql prepare

  - name: run sysbench tpcc benchmark
    command: /usr/share/sysbench/tpcc.lua --mysql-user=root --mysql-db=sbt --time=30 --threads=64 --report-interval=1 --tables=3 --scale=5 --db-driver=mysql run

  - name: install 3rd party packages with apt
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "Debian"

  - name: install 3rd party packages with yum
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "RedHat"

  - name: run bats unit tests for ps_tokudb_admin scripts
    command: /usr/local/bin/bats /package-testing/bats/ps_tokudb_admin_unit.bats

  - name: run bats integration tests for ps_tokudb_admin script
    command: /usr/local/bin/bats /package-testing/bats/ps_tokudb_admin_integration.bats

  - name: run bats tests for mysql init scripts
    command: /usr/local/bin/bats /package-testing/bats/mysql-init-scripts.bats

  - name: start mysql service
    service: name=mysql state=started

    # temporary commented out until BLD-906 is resolved
# - name: check that mysqladmin shutdown works correctly
#   command: /package-testing/madmin_check.sh

  - name: uninstall PAM before final package uninstall
    command: /usr/local/bin/bats /package-testing/scripts/ps_pam_test/ps_pam_mysql_uninstall.bats

  - name: get my.cnf stats
    stat: path=/etc/my.cnf
    register: mycnf

  - name: copy config file to backup
    copy:
      src: /etc/my.cnf
      dest: /etc/my.cnf.backup
      remote_src: yes
    when: mycnf.stat.exists and ansible_os_family == "RedHat"

  - name: remove Percona Server 5.6 deb packages
    apt:
      name: "{{ packages }}"
      update_cache: no
      state: absent
    vars:
      packages:
      - percona-server*
    when: ansible_os_family == "Debian"

  - name: remove Percona Server 5.6 rpm packages
    yum:
      name: "{{ packages }}"
      state: absent
    vars:
      packages:
      - Percona-Server*
    when: ansible_os_family == "RedHat"

  - name: check if process is stopped after package removal
    command: /package-testing/check_running.sh mysql stopped

  - stat:
      path: /var/lib/mysql
    register: p

  - fail:
      msg: "Path exists and is a directory and is not empty"
    when: p.stat.isdir is defined and p.stat.isdir and p.stat.size > 1000000
