---
# This playbook does following:
#   enables Percona testing repository
#   installs latest version of PS 5.7, PT and PXB 2.4
#   does some tests

#- import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: include tasks for enabling test repo
    include: ../tasks/enable_testing_repo.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling main repo
    include: ../tasks/enable_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

  - name: install Percona Server 5.7 packages
    include_tasks: ../tasks/install_ps57.yml

  - name: install Percona Toolkit new deb packages
    include_tasks: ../tasks/install_pt.yml

  - name: install sysbench new packages
    include_tasks: ../tasks/install_sysbench.yml

  - name: install Percona XtraBackup 2.4 packages
    include_tasks: ../tasks/install_pxb24.yml

  - name: start mysql service with service command
    command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mysql service with systemctl command
    command: systemctl start mysql
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7

  - name: set root password on centos
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: copy .my.cnf with credentials on centos
    template: src=../templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"

  - name: restart mysql service
    service: name=mysql state=restarted

  - name: install plugins, import world database
    command: /package-testing/plugins_test.sh

  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb24

  - name: check that Percona XtraBackup package versions are correct
    command: /package-testing/package_check.sh pxb24

  - name: install 3rd party packages with apt
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "Debian"

  - name: install 3rd party packages with yum
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "RedHat"

  - name: add sbt user
    command: mysql -e "CREATE USER 'sbt'@'localhost' IDENTIFIED BY 's3cret!Pass'; GRANT ALL ON *.* TO 'sbt'@'localhost'; FLUSH PRIVILEGES;"

  - name: run sysbench prepare script
    command: sysbench --mysql-user=sbt --mysql-password=s3cret!Pass --mysql-db=sb --time=20 --threads=64 --tables=3 oltp_read_write prepare
    when: ansible_distribution_release != "bullseye"

  - name: run sysbench benchmark
    command: sysbench --mysql-user=sbt --mysql-db=sb --mysql-password=s3cret!Pass --time=20 --threads=64 --tables=3 oltp_read_write run
    when: ansible_distribution_release != "bullseye"

  - name: run sysbench tpcc prepare script
    command: /usr/share/sysbench/tpcc.lua --mysql-user=sbt --mysql-password=s3cret!Pass  --mysql-db=sbt --time=20 --threads=64 --report-interval=1 --tables=2 --scale=1 --db-driver=mysql prepare
    when: ansible_distribution_release != "bullseye"

  - name: run sysbench tpcc benchmark
    command: /usr/share/sysbench/tpcc.lua --mysql-user=sbt --mysql-password=s3cret!Pass --mysql-db=sbt --time=20 --threads=64 --report-interval=1 --tables=2 --scale=1 --db-driver=mysql run
    when: ansible_distribution_release != "bullseye"

  - name: run backup
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backups/

  - name: prepare backup
    command: /usr/bin/xtrabackup --prepare --user=root --target-dir=/tmp/backups/

  - name: install qpress package on Redhat/CentOS
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - qpress
    when: ansible_os_family == "RedHat"

  - name: install qpress package on Ubuntu/Debian
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - qpress
    when: ansible_os_family == "Debian"

  - name: run backup with quicklz compression
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backup_q/ --compress=quicklz --compress-threads=10

  - name: decompress backup
    command: /usr/bin/xtrabackup --decompress --user=root --target-dir=/tmp/backup_q/

  - name: prepare backup
    command: /usr/bin/xtrabackup --prepare --user=root --target-dir=/tmp/backup_q/

  - name: remove Percona Server 5.7 deb packages
    apt:
      name: "{{ packages }}"
      update_cache: no
      state: absent
    vars:
      packages:
      - percona-server-server-5.7
      - percona-xtrabackup-24
    when: ansible_os_family == "Debian"

  - name: remove Percona Server 5.7 rpm packages
    yum:
      name: "{{ packages }}"
      state: absent
    vars:
      packages:
      - Percona-Server-server-57
      - percona-xtrabackup-24
    when: ansible_os_family == "RedHat"

  - name: check if process is stopped after package removal
    command: /package-testing/check_running.sh mysql stopped
