---
# This playbook does following:
#   enables Percona testing repository
#   installs PSMDB 4.4
#   does some tests

# - import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo
  vars:
    vault_token: "{{ lookup('env', 'VAULT_TEST_TOKEN') }}"
    vault_cert: "{{ lookup('env', 'VAULT_TEST_CERT') }}"

  tasks:
  - name: install GPG key for epel 8
    rpm_key:
     state: present
     key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install GPG key for Percona repos
    rpm_key:
     state: present
     key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
    when: ansible_os_family == "RedHat"

  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: copy certificate for keyring vault
    copy:
      src: "{{ vault_cert }}"
      dest: /package-testing/scripts/psmdb_encryption/test.cer

  - name: create token file for vault
    copy:
      dest: "/package-testing/scripts/psmdb_encryption/mongodb-test-vault-token"
      content: |
        {{ vault_token }}

  - name: include tasks for enabling test repo
    include_tasks: ../tasks/enable_psmdb_repo.yml
    vars:
      psmdb_repo: "psmdb-44 testing"
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling main repo
    include_tasks: ../tasks/enable_psmdb_repo.yml
    vars:
      psmdb_repo: "psmdb-44"
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling experimental repo
    include_tasks: ../tasks/enable_psmdb_repo.yml
    vars:
      psmdb_repo: "psmdb-44 experimental"
    when: lookup('env', 'install_repo') == "experimental"

  - name: install PSMDB packages
    include_tasks: ../tasks/install_psmdb.yml

  - name: start mongod with service
    command: service mongod start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mongod with systemctl
    command: systemctl start mongod
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int > 6

  - name: check that PSMDB 4.4 package versions are correct
    command: /package-testing/package_check.sh psmdb44

  - name: check that PSMDB 4.4 version is correct
    command: /package-testing/version_check.sh psmdb44

  - name: test perconadecrypt with keyfile
    command: /package-testing/scripts/psmdb_encryption/perconadecrypt-test.sh 4.4 keyfile

  - name: test perconadecrypt with vault
    command: /package-testing/scripts/psmdb_encryption/perconadecrypt-test.sh 4.4 vault

  - name: test SE change, import data, restart service
    command: /package-testing/scripts/psmdb_test.sh 4.4

  - name: test encryption with keyfile
    command: /package-testing/scripts/psmdb_encryption/psmdb-encryption-test.sh keyfile

  - name: test encryption with vault
    command: /package-testing/scripts/psmdb_encryption/psmdb-encryption-test.sh vault

  - name: set pass and enable auth
    command: /package-testing/scripts/psmdb_set_auth.sh

  - name: run bats tests for mongo init scripts
    command: /usr/local/bin/bats /package-testing/bats/mongo-init-scripts.bats

  - name: install numactl package
    include_tasks: ../tasks/install_numactl.yml

  - name: run bats tests for mongo init scripts after numactl install
    command: /usr/local/bin/bats /package-testing/bats/mongo-init-scripts.bats

  - name: start mongod service
    service: name=mongod state=started

  - name: remove Percona Server for MongoDB 4.4 deb packages
    apt:
      name: "{{ packages }}"
      update_cache: no
      state: absent
    vars:
      packages:
      - percona-server-mongodb-server
    when: ansible_os_family == "Debian"

  - name: remove Percona Server for MongoDB 4.4 rpm packages
    yum:
      name: "{{ packages }}"
      state: absent
    vars:
      packages:
      - percona-server-mongodb-server
    when: ansible_os_family == "RedHat"

  - name: check if process is stopped after package removal
    command: /package-testing/check_running.sh mongodb stopped
