---
# This playbook sets up the percona repo

# - import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo

  tasks:

  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: Install MySQL apt repository package
    apt:
      deb: https://repo.mysql.com/mysql-apt-config_0.8.22-1_all.deb
    when: ansible_os_family == "Debian"

  - name: Install MySQL RHEL 6 yum repository package
    yum: name=https://repo.mysql.com/mysql80-community-release-el6-1.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: Install MySQL RHEL 7 yum repository package
    yum: name=https://repo.mysql.com/mysql80-community-release-el7-5.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: Import key for mysql-repo
    rpm_key:
      state: present
      key: http://repo.mysql.com/RPM-GPG-KEY-mysql-2022
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "8"

  - name: Install MySQL RHEL 8 yum repository package
    yum: name=https://repo.mysql.com/mysql80-community-release-el8-3.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Install MySQL RHEL 9 yum repository package
    yum: name=https://repo.mysql.com/mysql80-community-release-el9-1.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9"

  - name: epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: setup epel 8 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

  - name: disable the mysql module on RHEL/CentOS 8
    command: /usr/bin/dnf module disable mysql -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - vim
      - pv
      - unzip
    when: ansible_os_family == "Debian"

  - name: install MySQL Community deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - mysql-community-server
    when: ansible_os_family == "Debian"

  - name: install packages in centos
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - libselinux-python
      - pv
      - unzip
      - mysql-community-server
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version <= "7"

  - name: install packages in rhel/centos 8, 9
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - python3-libselinux
      - mysql-community-server
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "8"

  - name: Start the MySQL service
    service: name=mysql state=started
    when: ansible_os_family == "Debian"

  - name: Start the MySQL service
    service: name=mysqld state=started
    when: ansible_os_family == "RedHat"

  - name: set root password on centos
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: include tasks for enabling tools test repo
    include: ../tasks/enable_tools_testing_repo.yml

  - name: install Percona XtraBackup 8.1 packages
    include_tasks: ../tasks/install_pxb81.yml

  - name: install plugins, import world database
    command: /package-testing/plugins_test.sh

  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb81

  - name: check that Percona XtraBackup package versions are correct
    command: /package-testing/package_check.sh pxb81

  - name: run backup
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backups/

  - name: prepare the backup
    command: /usr/bin/xtrabackup --prepare --user=root --target-dir=/tmp/backups/
