---
# This playbook does following:
#   enables Percona testing repository
#   installs latest version of PS 8.0, PT and PXB 8.0
#   does some tests

# Cosmic is still missing python
# - import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: include tasks for enabling main repo
    include: ../tasks/enable_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling PS 8 test repo
    include: ../tasks/enable_ps8_main_repo.yml
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling PS 8 test repo
    include: ../tasks/enable_ps8_testing_repo.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling PS 8 experimental repo
    include: ../tasks/enable_ps8_experimental_repo.yml
    when: lookup('env', 'install_repo') == "experimental"

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql

# Disable Percona Toolkit installation till its supported in OL9 and Jammy
#  - name: install Percona Toolkit new deb packages
#    include_tasks: ../tasks/install_pt.yml

  - name: install Percona Server 8.0 packages
    include_tasks: ../tasks/install_ps80.yml

  - name: install Percona XtraBackup 8.0 packages
    include_tasks: ../tasks/install_pxb80.yml

  - name: start mysql service with service command
    command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mysql service with systemctl command
    command: systemctl start mysql
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "7"

  - name: set root password on centos
    command: /package-testing/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: install plugins, import world database
    command: /package-testing/plugins_test.sh

  - name: check that Percona XtraBackup version is correct
    command: /package-testing/version_check.sh pxb80

  - name: check that Percona XtraBackup package versions are correct
    command: /package-testing/package_check.sh pxb80

  - name: run backup
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backups/

  - name: prepare backup
    command: /usr/bin/xtrabackup --prepare --user=root --target-dir=/tmp/backups/

  - name: install qpress and lz4 packages on Redhat/CentOS
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - qpress
      - lz4
    when: ansible_os_family == "RedHat"

  - name: install qpress and lz4 packages on Ubuntu/Debian
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - qpress
      - lz4
    when: ansible_os_family == "Debian" and ansible_distribution_release != "bionic"

  - name: install qpress and lz4 packages on Bionic 
    apt:
      name: "{{ packages }}"
    vars: 
      packages:
      - qpress
      - liblz4-tool
    when: ansible_os_family == "Debian" and ansible_distribution_release == "bionic"

  - name: run backup with quicklz compression
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backup_q/ --compress=quicklz --compress-threads=10

  - name: decompress backup
    command: /usr/bin/xtrabackup --decompress --user=root --target-dir=/tmp/backup_q/

  - name: prepare backup
    command: /usr/bin/xtrabackup --prepare --user=root --target-dir=/tmp/backup_q/

  - name: run backup with lz4 compression
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backup_l/ --compress=lz4 --compress-threads=10

  - name: decompress backup
    command: /usr/bin/xtrabackup --decompress --user=root --target-dir=/tmp/backup_l/

  - name: prepare backup
    command: /usr/bin/xtrabackup --prepare --user=root --target-dir=/tmp/backup_l/

  - name: remove Percona Server deb packages
    apt:
      name: "{{ packages }}"
      update_cache: no
      state: absent
    vars:
      packages:
      - percona-server-server*
      - percona-xtrabackup-80
    when: ansible_os_family == "Debian"

  - name: remove Percona Server rpm packages
    yum:
      name: "{{ packages }}"
      state: absent
    vars:
     packages:
      - percona-server-server*
      - percona-xtrabackup-80
    when: ansible_os_family == "RedHat"

  - name: check if process is stopped after package removal
    command: /package-testing/check_running.sh mysql stopped
