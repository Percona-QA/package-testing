pipeline {
  agent {
      label "docker"
  }
  parameters {
    choice(name: 'DOCKER_ACC', choices: ['percona','perconalab'], description: 'Docker repo to use: percona or perconalab')
    string(name: 'DOCKER_PRODUCT', defaultValue: 'percona-xtradb-cluster', description: 'Product to test')
    string(name: 'DOCKER_TAG', defaultValue: '8.0.22-13.1', description: 'Docker tag to test')
    string(name: 'PXC_VERSION', defaultValue: '8.0.22-13.1', description: 'Full PXC version')
    string(name: 'PXC_REVISION', defaultValue: '428f061', description: 'Short git hash for release')
    string(name: 'PXC_WSREP_VERSION', defaultValue: '26.4.3', description: 'Galera WSREP version')
    string(name: 'PXC_PXB_VERSION', defaultValue: '2.4.22', description: 'PXB version installed (only for PXC 5.7)')
    string(name: 'PXC57_PKG_VERSION', defaultValue: '5.7.33-rel36-49.1', description: 'PXC package version (only for PXC 5.7)')
  }
  stages {
    stage('Prepare') {
      steps {
          script {
            currentBuild.displayName = "#${BUILD_NUMBER}-${PXC_VERSION}-${PXC_REVISION}"
            currentBuild.description = "${DOCKER_ACC}"
          }
         }
        }
    stage("Run parallel") {
        parallel {
      stage ('Run trivy analyzer') {
        steps {
            sh """
              sudo yum install -y curl wget git
              TRIVY_VERSION=\$(curl --silent 'https://api.github.com/repos/aquasecurity/trivy/releases/latest' | grep '"tag_name":' | tr -d '"' | sed -E 's/.*v(.+),.*/\\1/')
              wget https://github.com/aquasecurity/trivy/releases/download/v\${TRIVY_VERSION}/trivy_\${TRIVY_VERSION}_Linux-64bit.tar.gz
              sudo tar zxvf trivy_\${TRIVY_VERSION}_Linux-64bit.tar.gz -C /usr/local/bin/
              wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl
              /usr/local/bin/trivy -q image --format template --template @junit.tpl  -o trivy-hight-junit.xml \
              --timeout 10m0s --ignore-unfixed --exit-code 1 --severity HIGH,CRITICAL ${DOCKER_ACC}/percona-xtradb-cluster:${PXC_VERSION}
            """
         } //end steps
         post {
           always {
                    junit testResults: "*-junit.xml", keepLongStdio: true, allowEmptyResults: true, skipPublishingChecks: true
                }
        }
      } //end Run trivy analyzer

      stage('Run tests') {
        steps {
          sh '''
            export PATH=${PATH}:~/.local/bin
            sudo yum install -y python3 python3-pip
            rm -rf package-testing
            git clone https://github.com/Percona-QA/package-testing.git --depth 1
            cd package-testing/docker-image-tests/pxc
            pip3 install --user -r requirements.txt
            ./run.sh
          '''
      } //end steps
      post {
        always {
        junit 'package-testing/docker-image-tests/pxc/report.xml'
      }
     }
    }
   }
  }
 }
}
