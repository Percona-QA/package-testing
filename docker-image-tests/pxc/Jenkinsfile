pipeline {
  agent {
      label "docker"
  }
  parameters {
    choice(name: 'DOCKER_ACC', choices: ['percona','perconalab'], description: 'Docker repo to use: percona or perconalab')
    string(name: 'DOCKER_PRODUCT', defaultValue: 'percona-xtradb-cluster', description: 'Product to test')
    string(name: 'DOCKER_TAG', defaultValue: '8.0.21', description: 'Docker tag to test')
    string(name: 'PXC_VERSION', defaultValue: '8.0.21-12', description: 'Full PXC version')
    string(name: 'PXC_REVISION', defaultValue: '53aeb90', description: 'Short git hash for release')
    string(name: 'PXC_WSREP_VERSION', defaultValue: '26.4.3', description: 'Galera WSREP version')
  }
  stages {
    stage('Run test') {
      steps {
          script {
            currentBuild.displayName = "#${BUILD_NUMBER}-${PXC_VERSION}-${PXC_REVISION}"
            currentBuild.description = "${DOCKER_ACC}"
          }
          sh '''
            export PATH=${PATH}:~/.local/bin
            sudo yum install -y python3 python3-pip
            rm -rf package-testing
            git clone https://github.com/Percona-QA/package-testing.git --depth 1
            cd package-testing/docker-image-tests/pxc
            pip3 install --user -r requirements.txt
            ./run.sh
          '''
      } //end steps
    } //end Run test stage
  } //end stages
  post {
    always {
      junit 'package-testing/docker-image-tests/pxc/report.xml'
    }
  }
} //end pipeline
