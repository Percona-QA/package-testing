- name: include playbook for removing Percona repo
  include_tasks: remove_percona_repository.yml

- name: Get the arch value from /etc/os-release
  shell: uname -m 
  register: arch_output

- name: Replace spaces with dashes in arch_output
  set_fact:
    arch_output: "{{ arch_output.stdout | trim }}"

- name: Install percona release Debian
  apt:
    deb: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
  when: ansible_os_family == "Debian"

- name: Install percona release RHEL
  command: rpm -ivh --nodigest --nofiledigest https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  when: ansible_os_family == "RedHat"

- name: add pro repository on debian
  template: src=../templates/pro_deb_repo_file_pxc80.j2
            dest=/etc/apt/sources.list.d/psmysql-pro.list
  vars:
    client_id: "{{ lookup('env', 'USERNAME') }}"
    client_token: "{{ lookup('env', 'PASSWORD') }}"
    repo: "release"
  when:
    - ansible_os_family == "Debian"

- name: update deb cache
  command: apt update
  when:
    - ansible_os_family == "Debian"

- name: add pro repository on rmp x86_64
  template: src=../templates/pro_rpm_repo_file_pxc80.j2
            dest=/etc/yum.repos.d/psmysql-pro.repo
  vars:
    client_id: "{{ lookup('env', 'USERNAME') }}"
    client_token: "{{ lookup('env', 'PASSWORD') }}"
    repo: "release"
  when:
    - ansible_os_family == "RedHat"
    - arch_output == "x86_64"

- name: add pro repository on rmp aarch64 (ARM)
  template: src=../templates/pro_rpm_repo_file_pxc80_arm.j2
            dest=/etc/yum.repos.d/psmysql-pro.repo
  vars:
    client_id: "{{ lookup('env', 'USERNAME') }}"
    client_token: "{{ lookup('env', 'PASSWORD') }}"
    repo: "release"
  when:
    - ansible_os_family == "RedHat"
    - arch_output == "aarch64"

#- name: enable the tools repo
#  command: percona-release enable-only tools

- name: clean and update yum cache
  shell: |
    yum clean all
    yum makecache
  when: ansible_os_family == "RedHat"
