
# - name: setup epel 6 repo
#   yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm state=present
#   when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: setup epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: setup epel 7 repo for Amazon Linux 2
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2"

  - name: install GPG key for epel 8
    rpm_key:
     state: present
     key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install GPG key for Percona repos
    rpm_key:
     state: present
     key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: setup epel 8 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: add the Vault and epel CentOS 6 repos
    shell: |
      curl https://www.getpagespeed.com/files/centos6-eol.repo --output /etc/yum.repos.d/CentOS-Base.repo
      curl https://www.getpagespeed.com/files/centos6-epel-eol.repo --output /etc/yum.repos.d/epel.repo
      yum -y install centos-release-scl
      curl https://www.getpagespeed.com/files/centos6-scl-eol.repo --output /etc/yum.repos.d/CentOS-SCLo-scl.repo
      curl https://www.getpagespeed.com/files/centos6-scl-rh-eol.repo --output /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo
      yum -y install epel-release.noarch
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: install needed packages for running tests with apt
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - unzip
      - wget
      - gnupg
      - rsync
    retries: 60
    delay: 10
    register: result
    until: result is not failed
    when: ansible_os_family == "Debian"

  - name: install needed packages for running tests with yum
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - pv
      - libselinux-python
      - unzip
      - wget
      - rsync
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

  - name: install needed packages for running tests with yum on RHEL8
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - unzip
      - wget
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 8

  - name: register SLES for updates with suse_register
    command: suse_register -a email="@@SLES_REG_EMAIL@@" -a regcode-sles=@@SLES_REG_CODE@@
    when: ansible_os_family == "Suse" and ansible_distribution_major_version == "11"

  - name: register SLES for updates with SUSEConnect
    command: SUSEConnect --email="@@SLES_REG_EMAIL@@" --regcode=@@SLES_REG_CODE@@
    when: ansible_os_family == "Suse" and ansible_distribution_major_version == "12"

  - name: import rpm gpg key on sles12
    command: rpmkeys --import https://www.percona.com/downloads/RPM-GPG-KEY-percona
    when: ansible_os_family == "Suse" and ansible_distribution_major_version == "12"

  # - name: setup SDK repo on SLES
  #   zypper: name="{{ item }}" state=present
  #   with_items:
  #   - /package-testing/sle-sdk-release-11.4-1.55.x86_64.rpm
  #   - /package-testing/sle-sdk-release-SDK-11.4-1.55.x86_64.rpm
  #   when: ansible_os_family == "Suse"

  - name: update image
    command: zypper -n update
    when: ansible_os_family == "Suse" and ansible_distribution_major_version == "12"

  - name: install needed packages for running tests with zypper
    zypper:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - wget
      - unzip
    when: ansible_os_family == "Suse"

  - name: get abs path of package-testing into pkg_testing_path variable
    shell: echo '{{ hostvars["localhost"]["playbook_dir"] }}' | grep -oE '^.*package-testing'
    register: pkg_testing_path_output
    when: lookup('env', 'USE_LOCAL_PKG_TEST') == "1"

  - set_fact:
      pkg_testing_path: "{{ pkg_testing_path_output.stdout }}"
    when: lookup('env', 'USE_LOCAL_PKG_TEST') == "1"

  - name: copy package-testing directory to remote
    synchronize:
      src: "{{ pkg_testing_path }}"
      dest: /
      recursive: yes
      perms: yes
    when: lookup('env', 'USE_LOCAL_PKG_TEST') == "1"

  - name: download package-testing repo with wget
    command: "{{ item }}"
    with_items:
    - rm -rf /package-testing
    - rm -f master.zip
    - wget --no-check-certificate -O master.zip https://github.com/Percona-QA/package-testing/archive/master.zip
    - unzip master.zip
    - rm -f master.zip
    - mv package-testing-master /package-testing
    when: lookup('env', 'USE_LOCAL_PKG_TEST') == "" or lookup('env', 'USE_LOCAL_PKG_TEST') == "0"

  - name: install latest bats from github
    command: "{{ item }}"
    with_items:
    - rm -f master.zip
    - wget --no-check-certificate -O master.zip https://github.com/sstephenson/bats/archive/master.zip
    - unzip master.zip
    - rm -f master.zip
    - bats-master/install.sh /usr/local
    - rm -rf bats-master

  - name: include tasks for listing already installed packages
    include_tasks: list_installed_packages.yml

  - name: get selinux status
    command: sestatus
    register: selinux_status
    when: ansible_os_family == "RedHat"

  - name: list selinux status
    debug:
      var: selinux_status
    when: ansible_os_family == "RedHat"

  - name: get list of enabled dnf modules on centos 8
    command: dnf module list --enabled
    register: enabled_dnf_modules
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: list enabled dnf modules on centos 8
    debug:
      var: enabled_dnf_modules
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
