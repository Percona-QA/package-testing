
# MS-INSTALL START

  - name: install yum-utils for rhel
    yum:
      name: yum-utils
      state: present
    when: 
      - ansible_os_family == "RedHat"

  - name: Install MySQL RHEL 6 yum repository package
    yum: name=https://repo.mysql.com/mysql80-community-release-el6.rpm state=present
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Install MySQL RHEL 7 yum repository package
    yum: name=https://repo.mysql.com//mysql80-community-release-el7.rpm state=present
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Import GPG key for RPM 7 (Centos 7)
    rpm_key:
      state: present
      key: https://repo.mysql.com/RPM-GPG-KEY-mysql-2023
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version >= "7"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Import key for mysql-repo add GPG key (Debian)
    apt_key:
      url: http://repo.mysql.com/RPM-GPG-KEY-mysql-2023  
      state: present
    when: 
      - ansible_os_family == "Debian"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Import GPG key for RPM 8-3
    rpm_key:
      state: present
      key: https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version >= "8"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Install MySQL RHEL 8 yum repository package
    yum: name=https://repo.mysql.com/mysql80-community-release-el8.rpm state=present
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Install MySQL RHEL 9 yum repository package
    yum: name=https://repo.mysql.com/mysql80-community-release-el9.rpm state=present
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "9"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: setup epel 8 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: download and extract world database
    command: "{{ item }}"
    with_items:
    - wget --no-check-certificate -P /package-testing https://raw.githubusercontent.com/Percona-QA/percona-qa/master/sample_db/world.sql
    when:
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: disable the mysql module on RHEL/CentOS 8
    command: /usr/bin/dnf module disable mysql -y
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: install deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - vim
      - pv
      - unzip
    when: 
      - ansible_os_family == "Debian"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Install mysql deb packages using tarballs ubuntu 22.04
    command: wget https://cdn.mysql.com/archives/mysql-"{{ pxb_version_major }}"/mysql-server_"{{ pxb_version_major_minor }}"-1ubuntu22.04_amd64.deb-bundle.tar
    when: 
      - ansible_distribution == 'Ubuntu' and ansible_distribution_version == '22.04'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - pxb_version_major != "8.3"

  - name: Install mysql deb packages using tarballs ubuntu 23.04
    command: wget https://cdn.mysql.com/archives/mysql-"{{ pxb_version_major }}"/mysql-server_"{{ pxb_version_major_minor }}"-1ubuntu23.04_amd64.deb-bundle.tar
    when: 
      - ansible_distribution == 'Ubuntu' and ansible_distribution_version == '23.04'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - pxb_version_major != "8.3"

  - name: Install mysql deb packages using tarballs Debian 11
    command: wget https://cdn.mysql.com/archives/mysql-"{{ pxb_version_major }}"/mysql-server_"{{ pxb_version_major_minor }}"-1debian11_amd64.deb-bundle.tar
    when: 
      - ansible_distribution == 'Debian' and ansible_distribution_version == '11'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - pxb_version_major != "8.3"

  - name: Install mysql deb packages using tarballs Debian 12
    command: wget https://cdn.mysql.com/archives/mysql-"{{ pxb_version_major }}"/mysql-server_"{{ pxb_version_major_minor }}"-1debian12_amd64.deb-bundle.tar
    when: 
      - ansible_distribution == 'Debian' and ansible_distribution_version == '12.0'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - pxb_version_major != "8.3"

  - name: extract mysql deb packages for ubuntu 22.04
    command: tar -xvf mysql-server_"{{ pxb_version_major_minor }}"-1ubuntu22.04_amd64.deb-bundle.tar -C /tmp
    when: 
      - ansible_distribution == 'Ubuntu' and ansible_distribution_version == '22.04'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - pxb_version_major != "8.3"

  - name: extract mysql deb packages for ubuntu 23.04
    command: tar -xvf mysql-server_"{{ pxb_version_major_minor }}"-1ubuntu23.04_amd64.deb-bundle.tar -C /tmp
    when: 
      - ansible_distribution == 'Ubuntu' and ansible_distribution_version == '23.04'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - pxb_version_major != "8.3"

  - name: extract mysql deb packages for Debian 11
    command: tar -xvf mysql-server_"{{ pxb_version_major_minor }}"-1debian11_amd64.deb-bundle.tar -C /tmp
    when: 
      - ansible_distribution == 'Debian' and ansible_distribution_version == '11'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - pxb_version_major != "8.3"

  - name: extract mysql deb packages for Debian 12
    command: tar -xvf mysql-server_"{{ pxb_version_major_minor }}"-1debian12_amd64.deb-bundle.tar -C /tmp
    when: 
      - ansible_distribution == 'Debian' and ansible_distribution_version == '12.0'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - pxb_version_major != "8.3"

##
# NEW URL 8.3 https://cdn.mysql.com//Downloads/MySQL-8.3/mysql-server_8.3.0-1ubuntu23.10_amd64.deb-bundle.tar

  - name: Install mysql deb packages using tarballs ubuntu 22.04
    command: wget https://cdn.mysql.com//Downloads/MySQL-"{{ pxb_version_major }}"/mysql-server_"{{ pxb_version_major_minor }}"-1ubuntu22.04_amd64.deb-bundle.tar
    when: 
      - ansible_distribution == 'Ubuntu' and ansible_distribution_version == '22.04'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Install mysql deb packages using tarballs ubuntu 23.04
    command: wget https://cdn.mysql.com//Downloads/MySQL-"{{ pxb_version_major }}"/mysql-server_"{{ pxb_version_major_minor }}"-1ubuntu23.10_amd64.deb-bundle.tar  
    when: 
      - ansible_distribution == 'Ubuntu' and ansible_distribution_version == '23.04'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Install mysql deb packages using tarballs Debian 11
    command: wget https://cdn.mysql.com//Downloads/MySQL-"{{ pxb_version_major }}"/mysql-server_"{{ pxb_version_major_minor }}"-1debian11_amd64.deb-bundle.tar
    when: 
      - ansible_distribution == 'Debian' and ansible_distribution_version == '11'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Install mysql deb packages using tarballs Debian 12
    command: wget https://cdn.mysql.com//Downloads/MySQL-"{{ pxb_version_major }}"/mysql-server_"{{ pxb_version_major_minor }}"-1debian12_amd64.deb-bundle.tar
    when: 
      - ansible_distribution == 'Debian' and ansible_distribution_version == '12.0'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: extract mysql deb packages for ubuntu 22.04
    command: tar -xvf mysql-server_"{{ pxb_version_major_minor }}"-1ubuntu22.04_amd64.deb-bundle.tar -C /tmp
    when: 
      - ansible_distribution == 'Ubuntu' and ansible_distribution_version == '22.04'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: extract mysql deb packages for ubuntu 23.04
    command: tar -xvf mysql-server_"{{ pxb_version_major_minor }}"-1ubuntu23.04_amd64.deb-bundle.tar -C /tmp
    when: 
      - ansible_distribution == 'Ubuntu' and ansible_distribution_version == '23.04'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: extract mysql deb packages for Debian 11
    command: tar -xvf mysql-server_"{{ pxb_version_major_minor }}"-1debian11_amd64.deb-bundle.tar -C /tmp
    when: 
      - ansible_distribution == 'Debian' and ansible_distribution_version == '11'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: extract mysql deb packages for Debian 12
    command: tar -xvf mysql-server_"{{ pxb_version_major_minor }}"-1debian12_amd64.deb-bundle.tar -C /tmp
    when: 
      - ansible_distribution == 'Debian' and ansible_distribution_version == '12.0'
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: install mysql deb packages
    shell: dpkg -i /tmp/*.deb || apt-get install -f -y
    environment:
      DEBIAN_FRONTEND: noninteractive
    when: 
      - ansible_os_family == "Debian"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: Enable Innovation LTS repo for RHEL
    shell: yum-config-manager --disable mysql80-community && yum-config-manager --enable mysql-innovation-community
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version >= "7"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: install packages in centos
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - libselinux-python
      - pv
      - unzip
      - mysql-community-server-{{ pxb_version_major_minor }}-1.el7
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version <= "7"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: install packages in rhel/centos 8
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - python3-libselinux
      - mysql-community-server-"{{ pxb_version_major_minor }}"-1.el8
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: install packages in rhel/centos 9
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - python3-libselinux
      - mysql-community-server-"{{ pxb_version_major_minor }}"-1.el9
    when: 
      - ansible_os_family == "RedHat" and ansible_distribution_major_version == "9"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: start mysql service with service command
    command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mysql service with systemctl command
    command: systemctl start mysqld
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "7"

  - name: Fetch current MySQL root password from log
    shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}' | tail -1
    register: init_pass
    ignore_errors: yes
    changed_when: false

  - name: Set root user password using current password
    shell: |
      mysql -uroot -p'{{ init_pass.stdout }}' --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'U?fY)9s7|3gxUm'; FLUSH PRIVILEGES;"
    when: init_pass.stdout is defined and init_pass.stdout | length > 0
    ignore_errors: true
    
  - name: Ensure MySQL service is restarted
    service:
      name: mysqld
      state: restarted
      enabled: yes
    when: init_pass.stdout is defined and init_pass.stdout | length > 0

  - name: Debug - Show fetched MySQL temporary root password
    debug:
      msg: "Fetched MySQL temporary root password is '{{ init_pass.stdout }}'"

  - name: copy .my.cnf with credentials on centos
    template: src=../templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: 
      - ansible_os_family == "RedHat"
      - lookup('env', 'server_to_test') == "ms_innovation_lts"

  - name: restart mysql service RHEL
    command: systemctl restart mysqld
    when:
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - ansible_os_family == "RedHat"

  - name: restart mysql service DEBIAN
    command: systemctl restart mysql
    when:
      - lookup('env', 'server_to_test') == "ms_innovation_lts"
      - ansible_os_family == "Debian"
